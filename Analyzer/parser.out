Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instruccionesglb
Rule 2     instruccionesglb -> instruccionesglb instruccionglb
Rule 3     instruccionesglb -> instruccionglb
Rule 4     instruccionglb -> funcionINS PUNTOCOMA
Rule 5     instruccionglb -> declaracionglb PUNTOCOMA
Rule 6     instruccionglb -> printINS PUNTOCOMA
Rule 7     instruccionglb -> llamadaFunc PUNTOCOMA
Rule 8     instruccionglb -> ifINS PUNTOCOMA
Rule 9     instruccionglb -> whileINS PUNTOCOMA
Rule 10    instruccionglb -> forINS PUNTOCOMA
Rule 11    instruccionglb -> newStruct PUNTOCOMA
Rule 12    instruccionglb -> pushArreglo PUNTOCOMA
Rule 13    instruccionglb -> asignacionStruct PUNTOCOMA
Rule 14    instruccionglb -> asignacionArreglo PUNTOCOMA
Rule 15    declaracionglb -> ID
Rule 16    declaracionglb -> ID IGUAL expresion
Rule 17    declaracionglb -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
Rule 18    funcionINS -> FUNCTION ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
Rule 19    funcionINS -> FUNCTION ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
Rule 20    funcionINS -> FUNCTION ID PARIZQ PARDER sentencia END
Rule 21    funcionINS -> FUNCTION ID PARIZQ params PARDER sentencia END
Rule 22    params -> params COMA ID
Rule 23    params -> params COMA ID DOSPUNTOS DOSPUNTOS tipos
Rule 24    params -> ID
Rule 25    params -> ID DOSPUNTOS DOSPUNTOS tipos
Rule 26    llamadaFunc -> ID PARIZQ PARDER
Rule 27    llamadaFunc -> ID PARIZQ listParams PARDER
Rule 28    listParams -> listParams COMA expresion
Rule 29    listParams -> expresion
Rule 30    returnINS -> RETURN
Rule 31    returnINS -> RETURN expresion
Rule 32    instrucciones -> instrucciones instruccion
Rule 33    instrucciones -> instruccion
Rule 34    instruccion -> declaracionINS PUNTOCOMA
Rule 35    instruccion -> printINS PUNTOCOMA
Rule 36    instruccion -> llamadaFunc PUNTOCOMA
Rule 37    instruccion -> ifINS PUNTOCOMA
Rule 38    instruccion -> returnINS PUNTOCOMA
Rule 39    instruccion -> whileINS PUNTOCOMA
Rule 40    instruccion -> forINS PUNTOCOMA
Rule 41    instruccion -> breakINS PUNTOCOMA
Rule 42    instruccion -> continueINS PUNTOCOMA
Rule 43    instruccion -> newStruct PUNTOCOMA
Rule 44    instruccion -> pushArreglo PUNTOCOMA
Rule 45    instruccion -> asignacionStruct PUNTOCOMA
Rule 46    instruccion -> asignacionArreglo PUNTOCOMA
Rule 47    sentencia -> instrucciones
Rule 48    printINS -> PRINTLN PARIZQ listParams PARDER
Rule 49    printINS -> PRINTLN PARIZQ PARDER
Rule 50    printINS -> PRINT PARIZQ listParams PARDER
Rule 51    printINS -> PRINT PARIZQ PARDER
Rule 52    declaracionINS -> ID
Rule 53    declaracionINS -> ID IGUAL expresion
Rule 54    declaracionINS -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
Rule 55    declaracionINS -> accesos ID
Rule 56    declaracionINS -> accesos ID IGUAL expresion
Rule 57    declaracionINS -> accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
Rule 58    tipos -> INT64
Rule 59    tipos -> FLOAT64
Rule 60    tipos -> STRING
Rule 61    tipos -> BOOL
Rule 62    tipos -> CHAR
Rule 63    accesos -> LOCAL
Rule 64    accesos -> GLOBAL
Rule 65    asignacionStruct -> accesoStruct IGUAL expresion
Rule 66    asignacionArreglo -> accesoArreglo IGUAL expresion
Rule 67    whileINS -> WHILE expresion sentencia END
Rule 68    forINS -> FOR ID IN expresion DOSPUNTOS expresion sentencia END
Rule 69    forINS -> FOR ID IN expresion sentencia END
Rule 70    breakINS -> BREAK
Rule 71    continueINS -> CONTINUE
Rule 72    ifINS -> IF expresion sentencia END
Rule 73    ifINS -> IF expresion sentencia ELSE sentencia END
Rule 74    ifINS -> IF expresion sentencia elseIfLista END
Rule 75    elseIfLista -> ELSEIF expresion sentencia
Rule 76    elseIfLista -> ELSEIF expresion sentencia ELSE sentencia
Rule 77    elseIfLista -> ELSEIF expresion sentencia elseIfLista
Rule 78    newStruct -> STRUCT ID atributosStr END
Rule 79    newStruct -> MUTABLE STRUCT ID atributosStr END
Rule 80    atributosStr -> atributosStr ID PUNTOCOMA
Rule 81    atributosStr -> ID PUNTOCOMA
Rule 82    atributosStr -> atributosStr ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA
Rule 83    atributosStr -> ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA
Rule 84    expresion -> MENOS expresion
Rule 85    expresion -> NOT expresion
Rule 86    expresion -> expresion MAS expresion
Rule 87    expresion -> expresion MENOS expresion
Rule 88    expresion -> expresion MULT expresion
Rule 89    expresion -> expresion DIV expresion
Rule 90    expresion -> expresion MOD expresion
Rule 91    expresion -> expresion POT expresion
Rule 92    expresion -> expresion MAYOR expresion
Rule 93    expresion -> expresion MENOR expresion
Rule 94    expresion -> expresion MAYORIGUAL expresion
Rule 95    expresion -> expresion MENORIGUAL expresion
Rule 96    expresion -> expresion IGUALES expresion
Rule 97    expresion -> expresion DISTINTOS expresion
Rule 98    expresion -> expresion OR expresion
Rule 99    expresion -> expresion AND expresion
Rule 100   expresion -> expValor
Rule 101   expValor -> PARIZQ expresion PARDER
Rule 102   expValor -> INTID
Rule 103   expValor -> FLOATID
Rule 104   expValor -> STRINGID
Rule 105   expValor -> expCHAR
Rule 106   expValor -> expNativas
Rule 107   expValor -> TRUE
Rule 108   expValor -> FALSE
Rule 109   expValor -> ID
Rule 110   expValor -> NOTHING
Rule 111   expValor -> llamadaFunc
Rule 112   expValor -> accesoStruct
Rule 113   expValor -> defArreglo
Rule 114   expValor -> accesoArreglo
Rule 115   expValor -> cutArreglo
Rule 116   expValor -> popArreglo
Rule 117   expValor -> lenArreglo
Rule 118   expCHAR -> CHARID
Rule 119   expNativas -> LOG10 PARIZQ expresion PARDER
Rule 120   expNativas -> LOG PARIZQ expresion COMA expresion PARDER
Rule 121   expNativas -> SIN PARIZQ expresion PARDER
Rule 122   expNativas -> COS PARIZQ expresion PARDER
Rule 123   expNativas -> TAN PARIZQ expresion PARDER
Rule 124   expNativas -> SQRT PARIZQ expresion PARDER
Rule 125   expNativas -> UPPERCASE PARIZQ expresion PARDER
Rule 126   expNativas -> LOWERCASE PARIZQ expresion PARDER
Rule 127   expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER
Rule 128   expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER
Rule 129   expNativas -> TRUNC PARIZQ expresion PARDER
Rule 130   expNativas -> FLOAT PARIZQ expresion PARDER
Rule 131   expNativas -> STRING PARIZQ expresion PARDER
Rule 132   expNativas -> TYPEOF PARIZQ expresion PARDER
Rule 133   accesoStruct -> ID PUNTO ID
Rule 134   accesoStruct -> accesoStruct PUNTO ID
Rule 135   defArreglo -> CORIZQ listParams CORDER
Rule 136   accesoArreglo -> ID CORIZQ expresion CORDER
Rule 137   accesoArreglo -> accesoArreglo CORIZQ expresion CORDER
Rule 138   cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
Rule 139   cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER
Rule 140   popArreglo -> POP NOT PARIZQ accesoArreglo PARDER
Rule 141   popArreglo -> POP NOT PARIZQ ID PARDER
Rule 142   lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER
Rule 143   lenArreglo -> LENGTH PARIZQ ID PARDER
Rule 144   pushArreglo -> PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
Rule 145   pushArreglo -> PUSH NOT PARIZQ ID COMA expresion PARDER

Terminals, with rules where they appear

AND                  : 99
BOOL                 : 61
BREAK                : 70
CHAR                 : 62
CHARID               : 118
COMA                 : 22 23 28 120 127 128 144 145
CONTINUE             : 71
CORDER               : 135 136 137 138 139
CORIZQ               : 135 136 137 138 139
COS                  : 122
DISTINTOS            : 97
DIV                  : 89
DOSPUNTOS            : 17 17 18 18 19 19 23 23 25 25 54 54 57 57 68 82 82 83 83 138 139
ELSE                 : 73 76
ELSEIF               : 75 76 77
END                  : 18 19 20 21 67 68 69 72 73 74 78 79
FALSE                : 108
FLOAT                : 130
FLOAT64              : 59 128
FLOATID              : 103
FOR                  : 68 69
FUNCTION             : 18 19 20 21
GLOBAL               : 64
ID                   : 15 16 17 18 19 20 21 22 23 24 25 26 27 52 53 54 55 56 57 68 69 78 79 80 81 82 83 109 133 133 134 136 139 141 143 145
IF                   : 72 73 74
IGUAL                : 16 17 53 54 56 57 65 66
IGUALES              : 96
IN                   : 68 69
INT64                : 58 127
INTID                : 102
LENGTH               : 142 143
LOCAL                : 63
LOG                  : 120
LOG10                : 119
LOWERCASE            : 126
MAS                  : 86
MAYOR                : 92
MAYORIGUAL           : 94
MENOR                : 93
MENORIGUAL           : 95
MENOS                : 84 87
MOD                  : 90
MULT                 : 88
MUTABLE              : 79
NOT                  : 85 140 141 144 145
NOTHING              : 110
OR                   : 98
PARDER               : 18 19 20 21 26 27 48 49 50 51 101 119 120 121 122 123 124 125 126 127 128 129 130 131 132 140 141 142 143 144 145
PARIZQ               : 18 19 20 21 26 27 48 49 50 51 101 119 120 121 122 123 124 125 126 127 128 129 130 131 132 140 141 142 143 144 145
PARSE                : 127 128
POP                  : 140 141
POT                  : 91
PRINT                : 50 51
PRINTLN              : 48 49
PUNTO                : 133 134
PUNTOCOMA            : 4 5 6 7 8 9 10 11 12 13 14 34 35 36 37 38 39 40 41 42 43 44 45 46 80 81 82 83
PUSH                 : 144 145
RETURN               : 30 31
SIN                  : 121
SQRT                 : 124
STRING               : 60 131
STRINGID             : 104
STRUCT               : 78 79
TAN                  : 123
TRUE                 : 107
TRUNC                : 129
TYPEOF               : 132
UPPERCASE            : 125
WHILE                : 67
error                : 

Nonterminals, with rules where they appear

accesoArreglo        : 66 114 137 138 140 142 144
accesoStruct         : 65 112 134
accesos              : 55 56 57
asignacionArreglo    : 14 46
asignacionStruct     : 13 45
atributosStr         : 78 79 80 82
breakINS             : 41
continueINS          : 42
cutArreglo           : 115
declaracionINS       : 34
declaracionglb       : 5
defArreglo           : 113
elseIfLista          : 74 77
expCHAR              : 105
expNativas           : 106
expValor             : 100
expresion            : 16 17 28 29 31 53 54 56 57 65 66 67 68 68 69 72 73 74 75 76 77 84 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 101 119 120 120 121 122 123 124 125 126 127 128 129 130 131 132 136 137 138 138 139 139 144 145
forINS               : 10 40
funcionINS           : 4
ifINS                : 8 37
inicio               : 0
instruccion          : 32 33
instrucciones        : 32 47
instruccionesglb     : 1 2
instruccionglb       : 2 3
lenArreglo           : 117
listParams           : 27 28 48 50 135
llamadaFunc          : 7 36 111
newStruct            : 11 43
params               : 19 21 22 23
popArreglo           : 116
printINS             : 6 35
pushArreglo          : 12 44
returnINS            : 38
sentencia            : 18 19 20 21 67 68 69 72 73 73 74 75 76 76 77
tipos                : 17 18 19 23 25 54 57 82 83
whileINS             : 9 39

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instruccionesglb
    (2) instruccionesglb -> . instruccionesglb instruccionglb
    (3) instruccionesglb -> . instruccionglb
    (4) instruccionglb -> . funcionINS PUNTOCOMA
    (5) instruccionglb -> . declaracionglb PUNTOCOMA
    (6) instruccionglb -> . printINS PUNTOCOMA
    (7) instruccionglb -> . llamadaFunc PUNTOCOMA
    (8) instruccionglb -> . ifINS PUNTOCOMA
    (9) instruccionglb -> . whileINS PUNTOCOMA
    (10) instruccionglb -> . forINS PUNTOCOMA
    (11) instruccionglb -> . newStruct PUNTOCOMA
    (12) instruccionglb -> . pushArreglo PUNTOCOMA
    (13) instruccionglb -> . asignacionStruct PUNTOCOMA
    (14) instruccionglb -> . asignacionArreglo PUNTOCOMA
    (18) funcionINS -> . FUNCTION ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (19) funcionINS -> . FUNCTION ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (20) funcionINS -> . FUNCTION ID PARIZQ PARDER sentencia END
    (21) funcionINS -> . FUNCTION ID PARIZQ params PARDER sentencia END
    (15) declaracionglb -> . ID
    (16) declaracionglb -> . ID IGUAL expresion
    (17) declaracionglb -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    FUNCTION        shift and go to state 15
    ID              shift and go to state 16
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24

    inicio                         shift and go to state 1
    instruccionesglb               shift and go to state 2
    instruccionglb                 shift and go to state 3
    funcionINS                     shift and go to state 4
    declaracionglb                 shift and go to state 5
    printINS                       shift and go to state 6
    llamadaFunc                    shift and go to state 7
    ifINS                          shift and go to state 8
    whileINS                       shift and go to state 9
    forINS                         shift and go to state 10
    newStruct                      shift and go to state 11
    pushArreglo                    shift and go to state 12
    asignacionStruct               shift and go to state 13
    asignacionArreglo              shift and go to state 14
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instruccionesglb .
    (2) instruccionesglb -> instruccionesglb . instruccionglb
    (4) instruccionglb -> . funcionINS PUNTOCOMA
    (5) instruccionglb -> . declaracionglb PUNTOCOMA
    (6) instruccionglb -> . printINS PUNTOCOMA
    (7) instruccionglb -> . llamadaFunc PUNTOCOMA
    (8) instruccionglb -> . ifINS PUNTOCOMA
    (9) instruccionglb -> . whileINS PUNTOCOMA
    (10) instruccionglb -> . forINS PUNTOCOMA
    (11) instruccionglb -> . newStruct PUNTOCOMA
    (12) instruccionglb -> . pushArreglo PUNTOCOMA
    (13) instruccionglb -> . asignacionStruct PUNTOCOMA
    (14) instruccionglb -> . asignacionArreglo PUNTOCOMA
    (18) funcionINS -> . FUNCTION ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (19) funcionINS -> . FUNCTION ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (20) funcionINS -> . FUNCTION ID PARIZQ PARDER sentencia END
    (21) funcionINS -> . FUNCTION ID PARIZQ params PARDER sentencia END
    (15) declaracionglb -> . ID
    (16) declaracionglb -> . ID IGUAL expresion
    (17) declaracionglb -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    $end            reduce using rule 1 (inicio -> instruccionesglb .)
    FUNCTION        shift and go to state 15
    ID              shift and go to state 16
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24

    instruccionglb                 shift and go to state 27
    funcionINS                     shift and go to state 4
    declaracionglb                 shift and go to state 5
    printINS                       shift and go to state 6
    llamadaFunc                    shift and go to state 7
    ifINS                          shift and go to state 8
    whileINS                       shift and go to state 9
    forINS                         shift and go to state 10
    newStruct                      shift and go to state 11
    pushArreglo                    shift and go to state 12
    asignacionStruct               shift and go to state 13
    asignacionArreglo              shift and go to state 14
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 3

    (3) instruccionesglb -> instruccionglb .

    FUNCTION        reduce using rule 3 (instruccionesglb -> instruccionglb .)
    ID              reduce using rule 3 (instruccionesglb -> instruccionglb .)
    PRINTLN         reduce using rule 3 (instruccionesglb -> instruccionglb .)
    PRINT           reduce using rule 3 (instruccionesglb -> instruccionglb .)
    IF              reduce using rule 3 (instruccionesglb -> instruccionglb .)
    WHILE           reduce using rule 3 (instruccionesglb -> instruccionglb .)
    FOR             reduce using rule 3 (instruccionesglb -> instruccionglb .)
    STRUCT          reduce using rule 3 (instruccionesglb -> instruccionglb .)
    MUTABLE         reduce using rule 3 (instruccionesglb -> instruccionglb .)
    PUSH            reduce using rule 3 (instruccionesglb -> instruccionglb .)
    $end            reduce using rule 3 (instruccionesglb -> instruccionglb .)


state 4

    (4) instruccionglb -> funcionINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 28


state 5

    (5) instruccionglb -> declaracionglb . PUNTOCOMA

    PUNTOCOMA       shift and go to state 29


state 6

    (6) instruccionglb -> printINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 30


state 7

    (7) instruccionglb -> llamadaFunc . PUNTOCOMA

    PUNTOCOMA       shift and go to state 31


state 8

    (8) instruccionglb -> ifINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 32


state 9

    (9) instruccionglb -> whileINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 33


state 10

    (10) instruccionglb -> forINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 34


state 11

    (11) instruccionglb -> newStruct . PUNTOCOMA

    PUNTOCOMA       shift and go to state 35


state 12

    (12) instruccionglb -> pushArreglo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 36


state 13

    (13) instruccionglb -> asignacionStruct . PUNTOCOMA

    PUNTOCOMA       shift and go to state 37


state 14

    (14) instruccionglb -> asignacionArreglo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 38


state 15

    (18) funcionINS -> FUNCTION . ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (19) funcionINS -> FUNCTION . ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (20) funcionINS -> FUNCTION . ID PARIZQ PARDER sentencia END
    (21) funcionINS -> FUNCTION . ID PARIZQ params PARDER sentencia END

    ID              shift and go to state 39


state 16

    (15) declaracionglb -> ID .
    (16) declaracionglb -> ID . IGUAL expresion
    (17) declaracionglb -> ID . IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (26) llamadaFunc -> ID . PARIZQ PARDER
    (27) llamadaFunc -> ID . PARIZQ listParams PARDER
    (133) accesoStruct -> ID . PUNTO ID
    (136) accesoArreglo -> ID . CORIZQ expresion CORDER

    PUNTOCOMA       reduce using rule 15 (declaracionglb -> ID .)
    IGUAL           shift and go to state 40
    PARIZQ          shift and go to state 41
    PUNTO           shift and go to state 42
    CORIZQ          shift and go to state 43


state 17

    (48) printINS -> PRINTLN . PARIZQ listParams PARDER
    (49) printINS -> PRINTLN . PARIZQ PARDER

    PARIZQ          shift and go to state 44


state 18

    (50) printINS -> PRINT . PARIZQ listParams PARDER
    (51) printINS -> PRINT . PARIZQ PARDER

    PARIZQ          shift and go to state 45


state 19

    (72) ifINS -> IF . expresion sentencia END
    (73) ifINS -> IF . expresion sentencia ELSE sentencia END
    (74) ifINS -> IF . expresion sentencia elseIfLista END
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 46
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 20

    (67) whileINS -> WHILE . expresion sentencia END
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 84
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 21

    (68) forINS -> FOR . ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> FOR . ID IN expresion sentencia END

    ID              shift and go to state 85


state 22

    (78) newStruct -> STRUCT . ID atributosStr END

    ID              shift and go to state 86


state 23

    (79) newStruct -> MUTABLE . STRUCT ID atributosStr END

    STRUCT          shift and go to state 87


state 24

    (144) pushArreglo -> PUSH . NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> PUSH . NOT PARIZQ ID COMA expresion PARDER

    NOT             shift and go to state 88


state 25

    (66) asignacionArreglo -> accesoArreglo . IGUAL expresion
    (137) accesoArreglo -> accesoArreglo . CORIZQ expresion CORDER

    IGUAL           shift and go to state 89
    CORIZQ          shift and go to state 90


state 26

    (65) asignacionStruct -> accesoStruct . IGUAL expresion
    (134) accesoStruct -> accesoStruct . PUNTO ID

    IGUAL           shift and go to state 91
    PUNTO           shift and go to state 92


state 27

    (2) instruccionesglb -> instruccionesglb instruccionglb .

    FUNCTION        reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    ID              reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    PRINTLN         reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    PRINT           reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    IF              reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    WHILE           reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    FOR             reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    STRUCT          reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    MUTABLE         reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    PUSH            reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)
    $end            reduce using rule 2 (instruccionesglb -> instruccionesglb instruccionglb .)


state 28

    (4) instruccionglb -> funcionINS PUNTOCOMA .

    FUNCTION        reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    ID              reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    PRINTLN         reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    PRINT           reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    IF              reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    WHILE           reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    FOR             reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    STRUCT          reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    MUTABLE         reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    PUSH            reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)
    $end            reduce using rule 4 (instruccionglb -> funcionINS PUNTOCOMA .)


state 29

    (5) instruccionglb -> declaracionglb PUNTOCOMA .

    FUNCTION        reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    ID              reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    PRINTLN         reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    PRINT           reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    IF              reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    WHILE           reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    FOR             reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    STRUCT          reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    MUTABLE         reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    PUSH            reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)
    $end            reduce using rule 5 (instruccionglb -> declaracionglb PUNTOCOMA .)


state 30

    (6) instruccionglb -> printINS PUNTOCOMA .

    FUNCTION        reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    ID              reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    PRINTLN         reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    PRINT           reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    IF              reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    WHILE           reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    FOR             reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    STRUCT          reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    MUTABLE         reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    PUSH            reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)
    $end            reduce using rule 6 (instruccionglb -> printINS PUNTOCOMA .)


state 31

    (7) instruccionglb -> llamadaFunc PUNTOCOMA .

    FUNCTION        reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    ID              reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    PRINTLN         reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    PRINT           reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    IF              reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    WHILE           reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    FOR             reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    STRUCT          reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    MUTABLE         reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    PUSH            reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)
    $end            reduce using rule 7 (instruccionglb -> llamadaFunc PUNTOCOMA .)


state 32

    (8) instruccionglb -> ifINS PUNTOCOMA .

    FUNCTION        reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    ID              reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    PRINTLN         reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    PRINT           reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    IF              reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    WHILE           reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    FOR             reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    STRUCT          reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    MUTABLE         reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    PUSH            reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)
    $end            reduce using rule 8 (instruccionglb -> ifINS PUNTOCOMA .)


state 33

    (9) instruccionglb -> whileINS PUNTOCOMA .

    FUNCTION        reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    ID              reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    PRINTLN         reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    PRINT           reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    IF              reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    WHILE           reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    FOR             reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    STRUCT          reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    MUTABLE         reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    PUSH            reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)
    $end            reduce using rule 9 (instruccionglb -> whileINS PUNTOCOMA .)


state 34

    (10) instruccionglb -> forINS PUNTOCOMA .

    FUNCTION        reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    ID              reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    PRINTLN         reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    PRINT           reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    IF              reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    WHILE           reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    FOR             reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    STRUCT          reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    MUTABLE         reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    PUSH            reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)
    $end            reduce using rule 10 (instruccionglb -> forINS PUNTOCOMA .)


state 35

    (11) instruccionglb -> newStruct PUNTOCOMA .

    FUNCTION        reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    ID              reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    PRINTLN         reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    PRINT           reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    IF              reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    WHILE           reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    FOR             reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    STRUCT          reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    MUTABLE         reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    PUSH            reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)
    $end            reduce using rule 11 (instruccionglb -> newStruct PUNTOCOMA .)


state 36

    (12) instruccionglb -> pushArreglo PUNTOCOMA .

    FUNCTION        reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    ID              reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    PRINTLN         reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    PRINT           reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    IF              reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    WHILE           reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    FOR             reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    STRUCT          reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    MUTABLE         reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    PUSH            reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)
    $end            reduce using rule 12 (instruccionglb -> pushArreglo PUNTOCOMA .)


state 37

    (13) instruccionglb -> asignacionStruct PUNTOCOMA .

    FUNCTION        reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    ID              reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    PRINTLN         reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    PRINT           reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    IF              reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    WHILE           reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    FOR             reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    STRUCT          reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    MUTABLE         reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    PUSH            reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)
    $end            reduce using rule 13 (instruccionglb -> asignacionStruct PUNTOCOMA .)


state 38

    (14) instruccionglb -> asignacionArreglo PUNTOCOMA .

    FUNCTION        reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    ID              reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    PRINTLN         reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    PRINT           reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    IF              reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    WHILE           reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    FOR             reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    STRUCT          reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    MUTABLE         reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    PUSH            reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)
    $end            reduce using rule 14 (instruccionglb -> asignacionArreglo PUNTOCOMA .)


state 39

    (18) funcionINS -> FUNCTION ID . PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (19) funcionINS -> FUNCTION ID . PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (20) funcionINS -> FUNCTION ID . PARIZQ PARDER sentencia END
    (21) funcionINS -> FUNCTION ID . PARIZQ params PARDER sentencia END

    PARIZQ          shift and go to state 93


state 40

    (16) declaracionglb -> ID IGUAL . expresion
    (17) declaracionglb -> ID IGUAL . expresion DOSPUNTOS DOSPUNTOS tipos
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 94
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 41

    (26) llamadaFunc -> ID PARIZQ . PARDER
    (27) llamadaFunc -> ID PARIZQ . listParams PARDER
    (28) listParams -> . listParams COMA expresion
    (29) listParams -> . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    PARDER          shift and go to state 95
    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    listParams                     shift and go to state 96
    expresion                      shift and go to state 97
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 42

    (133) accesoStruct -> ID PUNTO . ID

    ID              shift and go to state 98


state 43

    (136) accesoArreglo -> ID CORIZQ . expresion CORDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 99
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 44

    (48) printINS -> PRINTLN PARIZQ . listParams PARDER
    (49) printINS -> PRINTLN PARIZQ . PARDER
    (28) listParams -> . listParams COMA expresion
    (29) listParams -> . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    PARDER          shift and go to state 101
    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    listParams                     shift and go to state 100
    expresion                      shift and go to state 97
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 45

    (50) printINS -> PRINT PARIZQ . listParams PARDER
    (51) printINS -> PRINT PARIZQ . PARDER
    (28) listParams -> . listParams COMA expresion
    (29) listParams -> . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    PARDER          shift and go to state 103
    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    listParams                     shift and go to state 102
    expresion                      shift and go to state 97
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 46

    (72) ifINS -> IF expresion . sentencia END
    (73) ifINS -> IF expresion . sentencia ELSE sentencia END
    (74) ifINS -> IF expresion . sentencia elseIfLista END
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118
    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 104
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 47

    (84) expresion -> MENOS . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 141
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 48

    (85) expresion -> NOT . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 142
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 49

    (100) expresion -> expValor .

    MAS             reduce using rule 100 (expresion -> expValor .)
    MENOS           reduce using rule 100 (expresion -> expValor .)
    MULT            reduce using rule 100 (expresion -> expValor .)
    DIV             reduce using rule 100 (expresion -> expValor .)
    MOD             reduce using rule 100 (expresion -> expValor .)
    POT             reduce using rule 100 (expresion -> expValor .)
    MAYOR           reduce using rule 100 (expresion -> expValor .)
    MENOR           reduce using rule 100 (expresion -> expValor .)
    MAYORIGUAL      reduce using rule 100 (expresion -> expValor .)
    MENORIGUAL      reduce using rule 100 (expresion -> expValor .)
    IGUALES         reduce using rule 100 (expresion -> expValor .)
    DISTINTOS       reduce using rule 100 (expresion -> expValor .)
    OR              reduce using rule 100 (expresion -> expValor .)
    AND             reduce using rule 100 (expresion -> expValor .)
    ID              reduce using rule 100 (expresion -> expValor .)
    PRINTLN         reduce using rule 100 (expresion -> expValor .)
    PRINT           reduce using rule 100 (expresion -> expValor .)
    IF              reduce using rule 100 (expresion -> expValor .)
    RETURN          reduce using rule 100 (expresion -> expValor .)
    WHILE           reduce using rule 100 (expresion -> expValor .)
    FOR             reduce using rule 100 (expresion -> expValor .)
    BREAK           reduce using rule 100 (expresion -> expValor .)
    CONTINUE        reduce using rule 100 (expresion -> expValor .)
    STRUCT          reduce using rule 100 (expresion -> expValor .)
    MUTABLE         reduce using rule 100 (expresion -> expValor .)
    PUSH            reduce using rule 100 (expresion -> expValor .)
    LOCAL           reduce using rule 100 (expresion -> expValor .)
    GLOBAL          reduce using rule 100 (expresion -> expValor .)
    DOSPUNTOS       reduce using rule 100 (expresion -> expValor .)
    PUNTOCOMA       reduce using rule 100 (expresion -> expValor .)
    PARDER          reduce using rule 100 (expresion -> expValor .)
    COMA            reduce using rule 100 (expresion -> expValor .)
    CORDER          reduce using rule 100 (expresion -> expValor .)


state 50

    (101) expValor -> PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 143
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 51

    (102) expValor -> INTID .

    MAS             reduce using rule 102 (expValor -> INTID .)
    MENOS           reduce using rule 102 (expValor -> INTID .)
    MULT            reduce using rule 102 (expValor -> INTID .)
    DIV             reduce using rule 102 (expValor -> INTID .)
    MOD             reduce using rule 102 (expValor -> INTID .)
    POT             reduce using rule 102 (expValor -> INTID .)
    MAYOR           reduce using rule 102 (expValor -> INTID .)
    MENOR           reduce using rule 102 (expValor -> INTID .)
    MAYORIGUAL      reduce using rule 102 (expValor -> INTID .)
    MENORIGUAL      reduce using rule 102 (expValor -> INTID .)
    IGUALES         reduce using rule 102 (expValor -> INTID .)
    DISTINTOS       reduce using rule 102 (expValor -> INTID .)
    OR              reduce using rule 102 (expValor -> INTID .)
    AND             reduce using rule 102 (expValor -> INTID .)
    ID              reduce using rule 102 (expValor -> INTID .)
    PRINTLN         reduce using rule 102 (expValor -> INTID .)
    PRINT           reduce using rule 102 (expValor -> INTID .)
    IF              reduce using rule 102 (expValor -> INTID .)
    RETURN          reduce using rule 102 (expValor -> INTID .)
    WHILE           reduce using rule 102 (expValor -> INTID .)
    FOR             reduce using rule 102 (expValor -> INTID .)
    BREAK           reduce using rule 102 (expValor -> INTID .)
    CONTINUE        reduce using rule 102 (expValor -> INTID .)
    STRUCT          reduce using rule 102 (expValor -> INTID .)
    MUTABLE         reduce using rule 102 (expValor -> INTID .)
    PUSH            reduce using rule 102 (expValor -> INTID .)
    LOCAL           reduce using rule 102 (expValor -> INTID .)
    GLOBAL          reduce using rule 102 (expValor -> INTID .)
    DOSPUNTOS       reduce using rule 102 (expValor -> INTID .)
    PUNTOCOMA       reduce using rule 102 (expValor -> INTID .)
    PARDER          reduce using rule 102 (expValor -> INTID .)
    COMA            reduce using rule 102 (expValor -> INTID .)
    CORDER          reduce using rule 102 (expValor -> INTID .)


state 52

    (103) expValor -> FLOATID .

    MAS             reduce using rule 103 (expValor -> FLOATID .)
    MENOS           reduce using rule 103 (expValor -> FLOATID .)
    MULT            reduce using rule 103 (expValor -> FLOATID .)
    DIV             reduce using rule 103 (expValor -> FLOATID .)
    MOD             reduce using rule 103 (expValor -> FLOATID .)
    POT             reduce using rule 103 (expValor -> FLOATID .)
    MAYOR           reduce using rule 103 (expValor -> FLOATID .)
    MENOR           reduce using rule 103 (expValor -> FLOATID .)
    MAYORIGUAL      reduce using rule 103 (expValor -> FLOATID .)
    MENORIGUAL      reduce using rule 103 (expValor -> FLOATID .)
    IGUALES         reduce using rule 103 (expValor -> FLOATID .)
    DISTINTOS       reduce using rule 103 (expValor -> FLOATID .)
    OR              reduce using rule 103 (expValor -> FLOATID .)
    AND             reduce using rule 103 (expValor -> FLOATID .)
    ID              reduce using rule 103 (expValor -> FLOATID .)
    PRINTLN         reduce using rule 103 (expValor -> FLOATID .)
    PRINT           reduce using rule 103 (expValor -> FLOATID .)
    IF              reduce using rule 103 (expValor -> FLOATID .)
    RETURN          reduce using rule 103 (expValor -> FLOATID .)
    WHILE           reduce using rule 103 (expValor -> FLOATID .)
    FOR             reduce using rule 103 (expValor -> FLOATID .)
    BREAK           reduce using rule 103 (expValor -> FLOATID .)
    CONTINUE        reduce using rule 103 (expValor -> FLOATID .)
    STRUCT          reduce using rule 103 (expValor -> FLOATID .)
    MUTABLE         reduce using rule 103 (expValor -> FLOATID .)
    PUSH            reduce using rule 103 (expValor -> FLOATID .)
    LOCAL           reduce using rule 103 (expValor -> FLOATID .)
    GLOBAL          reduce using rule 103 (expValor -> FLOATID .)
    DOSPUNTOS       reduce using rule 103 (expValor -> FLOATID .)
    PUNTOCOMA       reduce using rule 103 (expValor -> FLOATID .)
    PARDER          reduce using rule 103 (expValor -> FLOATID .)
    COMA            reduce using rule 103 (expValor -> FLOATID .)
    CORDER          reduce using rule 103 (expValor -> FLOATID .)


state 53

    (104) expValor -> STRINGID .

    MAS             reduce using rule 104 (expValor -> STRINGID .)
    MENOS           reduce using rule 104 (expValor -> STRINGID .)
    MULT            reduce using rule 104 (expValor -> STRINGID .)
    DIV             reduce using rule 104 (expValor -> STRINGID .)
    MOD             reduce using rule 104 (expValor -> STRINGID .)
    POT             reduce using rule 104 (expValor -> STRINGID .)
    MAYOR           reduce using rule 104 (expValor -> STRINGID .)
    MENOR           reduce using rule 104 (expValor -> STRINGID .)
    MAYORIGUAL      reduce using rule 104 (expValor -> STRINGID .)
    MENORIGUAL      reduce using rule 104 (expValor -> STRINGID .)
    IGUALES         reduce using rule 104 (expValor -> STRINGID .)
    DISTINTOS       reduce using rule 104 (expValor -> STRINGID .)
    OR              reduce using rule 104 (expValor -> STRINGID .)
    AND             reduce using rule 104 (expValor -> STRINGID .)
    ID              reduce using rule 104 (expValor -> STRINGID .)
    PRINTLN         reduce using rule 104 (expValor -> STRINGID .)
    PRINT           reduce using rule 104 (expValor -> STRINGID .)
    IF              reduce using rule 104 (expValor -> STRINGID .)
    RETURN          reduce using rule 104 (expValor -> STRINGID .)
    WHILE           reduce using rule 104 (expValor -> STRINGID .)
    FOR             reduce using rule 104 (expValor -> STRINGID .)
    BREAK           reduce using rule 104 (expValor -> STRINGID .)
    CONTINUE        reduce using rule 104 (expValor -> STRINGID .)
    STRUCT          reduce using rule 104 (expValor -> STRINGID .)
    MUTABLE         reduce using rule 104 (expValor -> STRINGID .)
    PUSH            reduce using rule 104 (expValor -> STRINGID .)
    LOCAL           reduce using rule 104 (expValor -> STRINGID .)
    GLOBAL          reduce using rule 104 (expValor -> STRINGID .)
    DOSPUNTOS       reduce using rule 104 (expValor -> STRINGID .)
    PUNTOCOMA       reduce using rule 104 (expValor -> STRINGID .)
    PARDER          reduce using rule 104 (expValor -> STRINGID .)
    COMA            reduce using rule 104 (expValor -> STRINGID .)
    CORDER          reduce using rule 104 (expValor -> STRINGID .)


state 54

    (105) expValor -> expCHAR .

    MAS             reduce using rule 105 (expValor -> expCHAR .)
    MENOS           reduce using rule 105 (expValor -> expCHAR .)
    MULT            reduce using rule 105 (expValor -> expCHAR .)
    DIV             reduce using rule 105 (expValor -> expCHAR .)
    MOD             reduce using rule 105 (expValor -> expCHAR .)
    POT             reduce using rule 105 (expValor -> expCHAR .)
    MAYOR           reduce using rule 105 (expValor -> expCHAR .)
    MENOR           reduce using rule 105 (expValor -> expCHAR .)
    MAYORIGUAL      reduce using rule 105 (expValor -> expCHAR .)
    MENORIGUAL      reduce using rule 105 (expValor -> expCHAR .)
    IGUALES         reduce using rule 105 (expValor -> expCHAR .)
    DISTINTOS       reduce using rule 105 (expValor -> expCHAR .)
    OR              reduce using rule 105 (expValor -> expCHAR .)
    AND             reduce using rule 105 (expValor -> expCHAR .)
    ID              reduce using rule 105 (expValor -> expCHAR .)
    PRINTLN         reduce using rule 105 (expValor -> expCHAR .)
    PRINT           reduce using rule 105 (expValor -> expCHAR .)
    IF              reduce using rule 105 (expValor -> expCHAR .)
    RETURN          reduce using rule 105 (expValor -> expCHAR .)
    WHILE           reduce using rule 105 (expValor -> expCHAR .)
    FOR             reduce using rule 105 (expValor -> expCHAR .)
    BREAK           reduce using rule 105 (expValor -> expCHAR .)
    CONTINUE        reduce using rule 105 (expValor -> expCHAR .)
    STRUCT          reduce using rule 105 (expValor -> expCHAR .)
    MUTABLE         reduce using rule 105 (expValor -> expCHAR .)
    PUSH            reduce using rule 105 (expValor -> expCHAR .)
    LOCAL           reduce using rule 105 (expValor -> expCHAR .)
    GLOBAL          reduce using rule 105 (expValor -> expCHAR .)
    DOSPUNTOS       reduce using rule 105 (expValor -> expCHAR .)
    PUNTOCOMA       reduce using rule 105 (expValor -> expCHAR .)
    PARDER          reduce using rule 105 (expValor -> expCHAR .)
    COMA            reduce using rule 105 (expValor -> expCHAR .)
    CORDER          reduce using rule 105 (expValor -> expCHAR .)


state 55

    (106) expValor -> expNativas .

    MAS             reduce using rule 106 (expValor -> expNativas .)
    MENOS           reduce using rule 106 (expValor -> expNativas .)
    MULT            reduce using rule 106 (expValor -> expNativas .)
    DIV             reduce using rule 106 (expValor -> expNativas .)
    MOD             reduce using rule 106 (expValor -> expNativas .)
    POT             reduce using rule 106 (expValor -> expNativas .)
    MAYOR           reduce using rule 106 (expValor -> expNativas .)
    MENOR           reduce using rule 106 (expValor -> expNativas .)
    MAYORIGUAL      reduce using rule 106 (expValor -> expNativas .)
    MENORIGUAL      reduce using rule 106 (expValor -> expNativas .)
    IGUALES         reduce using rule 106 (expValor -> expNativas .)
    DISTINTOS       reduce using rule 106 (expValor -> expNativas .)
    OR              reduce using rule 106 (expValor -> expNativas .)
    AND             reduce using rule 106 (expValor -> expNativas .)
    ID              reduce using rule 106 (expValor -> expNativas .)
    PRINTLN         reduce using rule 106 (expValor -> expNativas .)
    PRINT           reduce using rule 106 (expValor -> expNativas .)
    IF              reduce using rule 106 (expValor -> expNativas .)
    RETURN          reduce using rule 106 (expValor -> expNativas .)
    WHILE           reduce using rule 106 (expValor -> expNativas .)
    FOR             reduce using rule 106 (expValor -> expNativas .)
    BREAK           reduce using rule 106 (expValor -> expNativas .)
    CONTINUE        reduce using rule 106 (expValor -> expNativas .)
    STRUCT          reduce using rule 106 (expValor -> expNativas .)
    MUTABLE         reduce using rule 106 (expValor -> expNativas .)
    PUSH            reduce using rule 106 (expValor -> expNativas .)
    LOCAL           reduce using rule 106 (expValor -> expNativas .)
    GLOBAL          reduce using rule 106 (expValor -> expNativas .)
    DOSPUNTOS       reduce using rule 106 (expValor -> expNativas .)
    PUNTOCOMA       reduce using rule 106 (expValor -> expNativas .)
    PARDER          reduce using rule 106 (expValor -> expNativas .)
    COMA            reduce using rule 106 (expValor -> expNativas .)
    CORDER          reduce using rule 106 (expValor -> expNativas .)


state 56

    (107) expValor -> TRUE .

    MAS             reduce using rule 107 (expValor -> TRUE .)
    MENOS           reduce using rule 107 (expValor -> TRUE .)
    MULT            reduce using rule 107 (expValor -> TRUE .)
    DIV             reduce using rule 107 (expValor -> TRUE .)
    MOD             reduce using rule 107 (expValor -> TRUE .)
    POT             reduce using rule 107 (expValor -> TRUE .)
    MAYOR           reduce using rule 107 (expValor -> TRUE .)
    MENOR           reduce using rule 107 (expValor -> TRUE .)
    MAYORIGUAL      reduce using rule 107 (expValor -> TRUE .)
    MENORIGUAL      reduce using rule 107 (expValor -> TRUE .)
    IGUALES         reduce using rule 107 (expValor -> TRUE .)
    DISTINTOS       reduce using rule 107 (expValor -> TRUE .)
    OR              reduce using rule 107 (expValor -> TRUE .)
    AND             reduce using rule 107 (expValor -> TRUE .)
    ID              reduce using rule 107 (expValor -> TRUE .)
    PRINTLN         reduce using rule 107 (expValor -> TRUE .)
    PRINT           reduce using rule 107 (expValor -> TRUE .)
    IF              reduce using rule 107 (expValor -> TRUE .)
    RETURN          reduce using rule 107 (expValor -> TRUE .)
    WHILE           reduce using rule 107 (expValor -> TRUE .)
    FOR             reduce using rule 107 (expValor -> TRUE .)
    BREAK           reduce using rule 107 (expValor -> TRUE .)
    CONTINUE        reduce using rule 107 (expValor -> TRUE .)
    STRUCT          reduce using rule 107 (expValor -> TRUE .)
    MUTABLE         reduce using rule 107 (expValor -> TRUE .)
    PUSH            reduce using rule 107 (expValor -> TRUE .)
    LOCAL           reduce using rule 107 (expValor -> TRUE .)
    GLOBAL          reduce using rule 107 (expValor -> TRUE .)
    DOSPUNTOS       reduce using rule 107 (expValor -> TRUE .)
    PUNTOCOMA       reduce using rule 107 (expValor -> TRUE .)
    PARDER          reduce using rule 107 (expValor -> TRUE .)
    COMA            reduce using rule 107 (expValor -> TRUE .)
    CORDER          reduce using rule 107 (expValor -> TRUE .)


state 57

    (108) expValor -> FALSE .

    MAS             reduce using rule 108 (expValor -> FALSE .)
    MENOS           reduce using rule 108 (expValor -> FALSE .)
    MULT            reduce using rule 108 (expValor -> FALSE .)
    DIV             reduce using rule 108 (expValor -> FALSE .)
    MOD             reduce using rule 108 (expValor -> FALSE .)
    POT             reduce using rule 108 (expValor -> FALSE .)
    MAYOR           reduce using rule 108 (expValor -> FALSE .)
    MENOR           reduce using rule 108 (expValor -> FALSE .)
    MAYORIGUAL      reduce using rule 108 (expValor -> FALSE .)
    MENORIGUAL      reduce using rule 108 (expValor -> FALSE .)
    IGUALES         reduce using rule 108 (expValor -> FALSE .)
    DISTINTOS       reduce using rule 108 (expValor -> FALSE .)
    OR              reduce using rule 108 (expValor -> FALSE .)
    AND             reduce using rule 108 (expValor -> FALSE .)
    ID              reduce using rule 108 (expValor -> FALSE .)
    PRINTLN         reduce using rule 108 (expValor -> FALSE .)
    PRINT           reduce using rule 108 (expValor -> FALSE .)
    IF              reduce using rule 108 (expValor -> FALSE .)
    RETURN          reduce using rule 108 (expValor -> FALSE .)
    WHILE           reduce using rule 108 (expValor -> FALSE .)
    FOR             reduce using rule 108 (expValor -> FALSE .)
    BREAK           reduce using rule 108 (expValor -> FALSE .)
    CONTINUE        reduce using rule 108 (expValor -> FALSE .)
    STRUCT          reduce using rule 108 (expValor -> FALSE .)
    MUTABLE         reduce using rule 108 (expValor -> FALSE .)
    PUSH            reduce using rule 108 (expValor -> FALSE .)
    LOCAL           reduce using rule 108 (expValor -> FALSE .)
    GLOBAL          reduce using rule 108 (expValor -> FALSE .)
    DOSPUNTOS       reduce using rule 108 (expValor -> FALSE .)
    PUNTOCOMA       reduce using rule 108 (expValor -> FALSE .)
    PARDER          reduce using rule 108 (expValor -> FALSE .)
    COMA            reduce using rule 108 (expValor -> FALSE .)
    CORDER          reduce using rule 108 (expValor -> FALSE .)


state 58

    (109) expValor -> ID .
    (26) llamadaFunc -> ID . PARIZQ PARDER
    (27) llamadaFunc -> ID . PARIZQ listParams PARDER
    (133) accesoStruct -> ID . PUNTO ID
    (136) accesoArreglo -> ID . CORIZQ expresion CORDER
    (139) cutArreglo -> ID . CORIZQ expresion DOSPUNTOS expresion CORDER

    MAS             reduce using rule 109 (expValor -> ID .)
    MENOS           reduce using rule 109 (expValor -> ID .)
    MULT            reduce using rule 109 (expValor -> ID .)
    DIV             reduce using rule 109 (expValor -> ID .)
    MOD             reduce using rule 109 (expValor -> ID .)
    POT             reduce using rule 109 (expValor -> ID .)
    MAYOR           reduce using rule 109 (expValor -> ID .)
    MENOR           reduce using rule 109 (expValor -> ID .)
    MAYORIGUAL      reduce using rule 109 (expValor -> ID .)
    MENORIGUAL      reduce using rule 109 (expValor -> ID .)
    IGUALES         reduce using rule 109 (expValor -> ID .)
    DISTINTOS       reduce using rule 109 (expValor -> ID .)
    OR              reduce using rule 109 (expValor -> ID .)
    AND             reduce using rule 109 (expValor -> ID .)
    ID              reduce using rule 109 (expValor -> ID .)
    PRINTLN         reduce using rule 109 (expValor -> ID .)
    PRINT           reduce using rule 109 (expValor -> ID .)
    IF              reduce using rule 109 (expValor -> ID .)
    RETURN          reduce using rule 109 (expValor -> ID .)
    WHILE           reduce using rule 109 (expValor -> ID .)
    FOR             reduce using rule 109 (expValor -> ID .)
    BREAK           reduce using rule 109 (expValor -> ID .)
    CONTINUE        reduce using rule 109 (expValor -> ID .)
    STRUCT          reduce using rule 109 (expValor -> ID .)
    MUTABLE         reduce using rule 109 (expValor -> ID .)
    PUSH            reduce using rule 109 (expValor -> ID .)
    LOCAL           reduce using rule 109 (expValor -> ID .)
    GLOBAL          reduce using rule 109 (expValor -> ID .)
    DOSPUNTOS       reduce using rule 109 (expValor -> ID .)
    PUNTOCOMA       reduce using rule 109 (expValor -> ID .)
    PARDER          reduce using rule 109 (expValor -> ID .)
    COMA            reduce using rule 109 (expValor -> ID .)
    CORDER          reduce using rule 109 (expValor -> ID .)
    PARIZQ          shift and go to state 41
    PUNTO           shift and go to state 42
    CORIZQ          shift and go to state 144


state 59

    (110) expValor -> NOTHING .

    MAS             reduce using rule 110 (expValor -> NOTHING .)
    MENOS           reduce using rule 110 (expValor -> NOTHING .)
    MULT            reduce using rule 110 (expValor -> NOTHING .)
    DIV             reduce using rule 110 (expValor -> NOTHING .)
    MOD             reduce using rule 110 (expValor -> NOTHING .)
    POT             reduce using rule 110 (expValor -> NOTHING .)
    MAYOR           reduce using rule 110 (expValor -> NOTHING .)
    MENOR           reduce using rule 110 (expValor -> NOTHING .)
    MAYORIGUAL      reduce using rule 110 (expValor -> NOTHING .)
    MENORIGUAL      reduce using rule 110 (expValor -> NOTHING .)
    IGUALES         reduce using rule 110 (expValor -> NOTHING .)
    DISTINTOS       reduce using rule 110 (expValor -> NOTHING .)
    OR              reduce using rule 110 (expValor -> NOTHING .)
    AND             reduce using rule 110 (expValor -> NOTHING .)
    ID              reduce using rule 110 (expValor -> NOTHING .)
    PRINTLN         reduce using rule 110 (expValor -> NOTHING .)
    PRINT           reduce using rule 110 (expValor -> NOTHING .)
    IF              reduce using rule 110 (expValor -> NOTHING .)
    RETURN          reduce using rule 110 (expValor -> NOTHING .)
    WHILE           reduce using rule 110 (expValor -> NOTHING .)
    FOR             reduce using rule 110 (expValor -> NOTHING .)
    BREAK           reduce using rule 110 (expValor -> NOTHING .)
    CONTINUE        reduce using rule 110 (expValor -> NOTHING .)
    STRUCT          reduce using rule 110 (expValor -> NOTHING .)
    MUTABLE         reduce using rule 110 (expValor -> NOTHING .)
    PUSH            reduce using rule 110 (expValor -> NOTHING .)
    LOCAL           reduce using rule 110 (expValor -> NOTHING .)
    GLOBAL          reduce using rule 110 (expValor -> NOTHING .)
    DOSPUNTOS       reduce using rule 110 (expValor -> NOTHING .)
    PUNTOCOMA       reduce using rule 110 (expValor -> NOTHING .)
    PARDER          reduce using rule 110 (expValor -> NOTHING .)
    COMA            reduce using rule 110 (expValor -> NOTHING .)
    CORDER          reduce using rule 110 (expValor -> NOTHING .)


state 60

    (111) expValor -> llamadaFunc .

    MAS             reduce using rule 111 (expValor -> llamadaFunc .)
    MENOS           reduce using rule 111 (expValor -> llamadaFunc .)
    MULT            reduce using rule 111 (expValor -> llamadaFunc .)
    DIV             reduce using rule 111 (expValor -> llamadaFunc .)
    MOD             reduce using rule 111 (expValor -> llamadaFunc .)
    POT             reduce using rule 111 (expValor -> llamadaFunc .)
    MAYOR           reduce using rule 111 (expValor -> llamadaFunc .)
    MENOR           reduce using rule 111 (expValor -> llamadaFunc .)
    MAYORIGUAL      reduce using rule 111 (expValor -> llamadaFunc .)
    MENORIGUAL      reduce using rule 111 (expValor -> llamadaFunc .)
    IGUALES         reduce using rule 111 (expValor -> llamadaFunc .)
    DISTINTOS       reduce using rule 111 (expValor -> llamadaFunc .)
    OR              reduce using rule 111 (expValor -> llamadaFunc .)
    AND             reduce using rule 111 (expValor -> llamadaFunc .)
    ID              reduce using rule 111 (expValor -> llamadaFunc .)
    PRINTLN         reduce using rule 111 (expValor -> llamadaFunc .)
    PRINT           reduce using rule 111 (expValor -> llamadaFunc .)
    IF              reduce using rule 111 (expValor -> llamadaFunc .)
    RETURN          reduce using rule 111 (expValor -> llamadaFunc .)
    WHILE           reduce using rule 111 (expValor -> llamadaFunc .)
    FOR             reduce using rule 111 (expValor -> llamadaFunc .)
    BREAK           reduce using rule 111 (expValor -> llamadaFunc .)
    CONTINUE        reduce using rule 111 (expValor -> llamadaFunc .)
    STRUCT          reduce using rule 111 (expValor -> llamadaFunc .)
    MUTABLE         reduce using rule 111 (expValor -> llamadaFunc .)
    PUSH            reduce using rule 111 (expValor -> llamadaFunc .)
    LOCAL           reduce using rule 111 (expValor -> llamadaFunc .)
    GLOBAL          reduce using rule 111 (expValor -> llamadaFunc .)
    DOSPUNTOS       reduce using rule 111 (expValor -> llamadaFunc .)
    PUNTOCOMA       reduce using rule 111 (expValor -> llamadaFunc .)
    PARDER          reduce using rule 111 (expValor -> llamadaFunc .)
    COMA            reduce using rule 111 (expValor -> llamadaFunc .)
    CORDER          reduce using rule 111 (expValor -> llamadaFunc .)


state 61

    (112) expValor -> accesoStruct .
    (134) accesoStruct -> accesoStruct . PUNTO ID

    MAS             reduce using rule 112 (expValor -> accesoStruct .)
    MENOS           reduce using rule 112 (expValor -> accesoStruct .)
    MULT            reduce using rule 112 (expValor -> accesoStruct .)
    DIV             reduce using rule 112 (expValor -> accesoStruct .)
    MOD             reduce using rule 112 (expValor -> accesoStruct .)
    POT             reduce using rule 112 (expValor -> accesoStruct .)
    MAYOR           reduce using rule 112 (expValor -> accesoStruct .)
    MENOR           reduce using rule 112 (expValor -> accesoStruct .)
    MAYORIGUAL      reduce using rule 112 (expValor -> accesoStruct .)
    MENORIGUAL      reduce using rule 112 (expValor -> accesoStruct .)
    IGUALES         reduce using rule 112 (expValor -> accesoStruct .)
    DISTINTOS       reduce using rule 112 (expValor -> accesoStruct .)
    OR              reduce using rule 112 (expValor -> accesoStruct .)
    AND             reduce using rule 112 (expValor -> accesoStruct .)
    ID              reduce using rule 112 (expValor -> accesoStruct .)
    PRINTLN         reduce using rule 112 (expValor -> accesoStruct .)
    PRINT           reduce using rule 112 (expValor -> accesoStruct .)
    IF              reduce using rule 112 (expValor -> accesoStruct .)
    RETURN          reduce using rule 112 (expValor -> accesoStruct .)
    WHILE           reduce using rule 112 (expValor -> accesoStruct .)
    FOR             reduce using rule 112 (expValor -> accesoStruct .)
    BREAK           reduce using rule 112 (expValor -> accesoStruct .)
    CONTINUE        reduce using rule 112 (expValor -> accesoStruct .)
    STRUCT          reduce using rule 112 (expValor -> accesoStruct .)
    MUTABLE         reduce using rule 112 (expValor -> accesoStruct .)
    PUSH            reduce using rule 112 (expValor -> accesoStruct .)
    LOCAL           reduce using rule 112 (expValor -> accesoStruct .)
    GLOBAL          reduce using rule 112 (expValor -> accesoStruct .)
    DOSPUNTOS       reduce using rule 112 (expValor -> accesoStruct .)
    PUNTOCOMA       reduce using rule 112 (expValor -> accesoStruct .)
    PARDER          reduce using rule 112 (expValor -> accesoStruct .)
    COMA            reduce using rule 112 (expValor -> accesoStruct .)
    CORDER          reduce using rule 112 (expValor -> accesoStruct .)
    PUNTO           shift and go to state 92


state 62

    (113) expValor -> defArreglo .

    MAS             reduce using rule 113 (expValor -> defArreglo .)
    MENOS           reduce using rule 113 (expValor -> defArreglo .)
    MULT            reduce using rule 113 (expValor -> defArreglo .)
    DIV             reduce using rule 113 (expValor -> defArreglo .)
    MOD             reduce using rule 113 (expValor -> defArreglo .)
    POT             reduce using rule 113 (expValor -> defArreglo .)
    MAYOR           reduce using rule 113 (expValor -> defArreglo .)
    MENOR           reduce using rule 113 (expValor -> defArreglo .)
    MAYORIGUAL      reduce using rule 113 (expValor -> defArreglo .)
    MENORIGUAL      reduce using rule 113 (expValor -> defArreglo .)
    IGUALES         reduce using rule 113 (expValor -> defArreglo .)
    DISTINTOS       reduce using rule 113 (expValor -> defArreglo .)
    OR              reduce using rule 113 (expValor -> defArreglo .)
    AND             reduce using rule 113 (expValor -> defArreglo .)
    ID              reduce using rule 113 (expValor -> defArreglo .)
    PRINTLN         reduce using rule 113 (expValor -> defArreglo .)
    PRINT           reduce using rule 113 (expValor -> defArreglo .)
    IF              reduce using rule 113 (expValor -> defArreglo .)
    RETURN          reduce using rule 113 (expValor -> defArreglo .)
    WHILE           reduce using rule 113 (expValor -> defArreglo .)
    FOR             reduce using rule 113 (expValor -> defArreglo .)
    BREAK           reduce using rule 113 (expValor -> defArreglo .)
    CONTINUE        reduce using rule 113 (expValor -> defArreglo .)
    STRUCT          reduce using rule 113 (expValor -> defArreglo .)
    MUTABLE         reduce using rule 113 (expValor -> defArreglo .)
    PUSH            reduce using rule 113 (expValor -> defArreglo .)
    LOCAL           reduce using rule 113 (expValor -> defArreglo .)
    GLOBAL          reduce using rule 113 (expValor -> defArreglo .)
    DOSPUNTOS       reduce using rule 113 (expValor -> defArreglo .)
    PUNTOCOMA       reduce using rule 113 (expValor -> defArreglo .)
    PARDER          reduce using rule 113 (expValor -> defArreglo .)
    COMA            reduce using rule 113 (expValor -> defArreglo .)
    CORDER          reduce using rule 113 (expValor -> defArreglo .)


state 63

    (114) expValor -> accesoArreglo .
    (137) accesoArreglo -> accesoArreglo . CORIZQ expresion CORDER
    (138) cutArreglo -> accesoArreglo . CORIZQ expresion DOSPUNTOS expresion CORDER

    MAS             reduce using rule 114 (expValor -> accesoArreglo .)
    MENOS           reduce using rule 114 (expValor -> accesoArreglo .)
    MULT            reduce using rule 114 (expValor -> accesoArreglo .)
    DIV             reduce using rule 114 (expValor -> accesoArreglo .)
    MOD             reduce using rule 114 (expValor -> accesoArreglo .)
    POT             reduce using rule 114 (expValor -> accesoArreglo .)
    MAYOR           reduce using rule 114 (expValor -> accesoArreglo .)
    MENOR           reduce using rule 114 (expValor -> accesoArreglo .)
    MAYORIGUAL      reduce using rule 114 (expValor -> accesoArreglo .)
    MENORIGUAL      reduce using rule 114 (expValor -> accesoArreglo .)
    IGUALES         reduce using rule 114 (expValor -> accesoArreglo .)
    DISTINTOS       reduce using rule 114 (expValor -> accesoArreglo .)
    OR              reduce using rule 114 (expValor -> accesoArreglo .)
    AND             reduce using rule 114 (expValor -> accesoArreglo .)
    ID              reduce using rule 114 (expValor -> accesoArreglo .)
    PRINTLN         reduce using rule 114 (expValor -> accesoArreglo .)
    PRINT           reduce using rule 114 (expValor -> accesoArreglo .)
    IF              reduce using rule 114 (expValor -> accesoArreglo .)
    RETURN          reduce using rule 114 (expValor -> accesoArreglo .)
    WHILE           reduce using rule 114 (expValor -> accesoArreglo .)
    FOR             reduce using rule 114 (expValor -> accesoArreglo .)
    BREAK           reduce using rule 114 (expValor -> accesoArreglo .)
    CONTINUE        reduce using rule 114 (expValor -> accesoArreglo .)
    STRUCT          reduce using rule 114 (expValor -> accesoArreglo .)
    MUTABLE         reduce using rule 114 (expValor -> accesoArreglo .)
    PUSH            reduce using rule 114 (expValor -> accesoArreglo .)
    LOCAL           reduce using rule 114 (expValor -> accesoArreglo .)
    GLOBAL          reduce using rule 114 (expValor -> accesoArreglo .)
    DOSPUNTOS       reduce using rule 114 (expValor -> accesoArreglo .)
    PUNTOCOMA       reduce using rule 114 (expValor -> accesoArreglo .)
    PARDER          reduce using rule 114 (expValor -> accesoArreglo .)
    COMA            reduce using rule 114 (expValor -> accesoArreglo .)
    CORDER          reduce using rule 114 (expValor -> accesoArreglo .)
    CORIZQ          shift and go to state 145


state 64

    (115) expValor -> cutArreglo .

    MAS             reduce using rule 115 (expValor -> cutArreglo .)
    MENOS           reduce using rule 115 (expValor -> cutArreglo .)
    MULT            reduce using rule 115 (expValor -> cutArreglo .)
    DIV             reduce using rule 115 (expValor -> cutArreglo .)
    MOD             reduce using rule 115 (expValor -> cutArreglo .)
    POT             reduce using rule 115 (expValor -> cutArreglo .)
    MAYOR           reduce using rule 115 (expValor -> cutArreglo .)
    MENOR           reduce using rule 115 (expValor -> cutArreglo .)
    MAYORIGUAL      reduce using rule 115 (expValor -> cutArreglo .)
    MENORIGUAL      reduce using rule 115 (expValor -> cutArreglo .)
    IGUALES         reduce using rule 115 (expValor -> cutArreglo .)
    DISTINTOS       reduce using rule 115 (expValor -> cutArreglo .)
    OR              reduce using rule 115 (expValor -> cutArreglo .)
    AND             reduce using rule 115 (expValor -> cutArreglo .)
    ID              reduce using rule 115 (expValor -> cutArreglo .)
    PRINTLN         reduce using rule 115 (expValor -> cutArreglo .)
    PRINT           reduce using rule 115 (expValor -> cutArreglo .)
    IF              reduce using rule 115 (expValor -> cutArreglo .)
    RETURN          reduce using rule 115 (expValor -> cutArreglo .)
    WHILE           reduce using rule 115 (expValor -> cutArreglo .)
    FOR             reduce using rule 115 (expValor -> cutArreglo .)
    BREAK           reduce using rule 115 (expValor -> cutArreglo .)
    CONTINUE        reduce using rule 115 (expValor -> cutArreglo .)
    STRUCT          reduce using rule 115 (expValor -> cutArreglo .)
    MUTABLE         reduce using rule 115 (expValor -> cutArreglo .)
    PUSH            reduce using rule 115 (expValor -> cutArreglo .)
    LOCAL           reduce using rule 115 (expValor -> cutArreglo .)
    GLOBAL          reduce using rule 115 (expValor -> cutArreglo .)
    DOSPUNTOS       reduce using rule 115 (expValor -> cutArreglo .)
    PUNTOCOMA       reduce using rule 115 (expValor -> cutArreglo .)
    PARDER          reduce using rule 115 (expValor -> cutArreglo .)
    COMA            reduce using rule 115 (expValor -> cutArreglo .)
    CORDER          reduce using rule 115 (expValor -> cutArreglo .)


state 65

    (116) expValor -> popArreglo .

    MAS             reduce using rule 116 (expValor -> popArreglo .)
    MENOS           reduce using rule 116 (expValor -> popArreglo .)
    MULT            reduce using rule 116 (expValor -> popArreglo .)
    DIV             reduce using rule 116 (expValor -> popArreglo .)
    MOD             reduce using rule 116 (expValor -> popArreglo .)
    POT             reduce using rule 116 (expValor -> popArreglo .)
    MAYOR           reduce using rule 116 (expValor -> popArreglo .)
    MENOR           reduce using rule 116 (expValor -> popArreglo .)
    MAYORIGUAL      reduce using rule 116 (expValor -> popArreglo .)
    MENORIGUAL      reduce using rule 116 (expValor -> popArreglo .)
    IGUALES         reduce using rule 116 (expValor -> popArreglo .)
    DISTINTOS       reduce using rule 116 (expValor -> popArreglo .)
    OR              reduce using rule 116 (expValor -> popArreglo .)
    AND             reduce using rule 116 (expValor -> popArreglo .)
    ID              reduce using rule 116 (expValor -> popArreglo .)
    PRINTLN         reduce using rule 116 (expValor -> popArreglo .)
    PRINT           reduce using rule 116 (expValor -> popArreglo .)
    IF              reduce using rule 116 (expValor -> popArreglo .)
    RETURN          reduce using rule 116 (expValor -> popArreglo .)
    WHILE           reduce using rule 116 (expValor -> popArreglo .)
    FOR             reduce using rule 116 (expValor -> popArreglo .)
    BREAK           reduce using rule 116 (expValor -> popArreglo .)
    CONTINUE        reduce using rule 116 (expValor -> popArreglo .)
    STRUCT          reduce using rule 116 (expValor -> popArreglo .)
    MUTABLE         reduce using rule 116 (expValor -> popArreglo .)
    PUSH            reduce using rule 116 (expValor -> popArreglo .)
    LOCAL           reduce using rule 116 (expValor -> popArreglo .)
    GLOBAL          reduce using rule 116 (expValor -> popArreglo .)
    DOSPUNTOS       reduce using rule 116 (expValor -> popArreglo .)
    PUNTOCOMA       reduce using rule 116 (expValor -> popArreglo .)
    PARDER          reduce using rule 116 (expValor -> popArreglo .)
    COMA            reduce using rule 116 (expValor -> popArreglo .)
    CORDER          reduce using rule 116 (expValor -> popArreglo .)


state 66

    (117) expValor -> lenArreglo .

    MAS             reduce using rule 117 (expValor -> lenArreglo .)
    MENOS           reduce using rule 117 (expValor -> lenArreglo .)
    MULT            reduce using rule 117 (expValor -> lenArreglo .)
    DIV             reduce using rule 117 (expValor -> lenArreglo .)
    MOD             reduce using rule 117 (expValor -> lenArreglo .)
    POT             reduce using rule 117 (expValor -> lenArreglo .)
    MAYOR           reduce using rule 117 (expValor -> lenArreglo .)
    MENOR           reduce using rule 117 (expValor -> lenArreglo .)
    MAYORIGUAL      reduce using rule 117 (expValor -> lenArreglo .)
    MENORIGUAL      reduce using rule 117 (expValor -> lenArreglo .)
    IGUALES         reduce using rule 117 (expValor -> lenArreglo .)
    DISTINTOS       reduce using rule 117 (expValor -> lenArreglo .)
    OR              reduce using rule 117 (expValor -> lenArreglo .)
    AND             reduce using rule 117 (expValor -> lenArreglo .)
    ID              reduce using rule 117 (expValor -> lenArreglo .)
    PRINTLN         reduce using rule 117 (expValor -> lenArreglo .)
    PRINT           reduce using rule 117 (expValor -> lenArreglo .)
    IF              reduce using rule 117 (expValor -> lenArreglo .)
    RETURN          reduce using rule 117 (expValor -> lenArreglo .)
    WHILE           reduce using rule 117 (expValor -> lenArreglo .)
    FOR             reduce using rule 117 (expValor -> lenArreglo .)
    BREAK           reduce using rule 117 (expValor -> lenArreglo .)
    CONTINUE        reduce using rule 117 (expValor -> lenArreglo .)
    STRUCT          reduce using rule 117 (expValor -> lenArreglo .)
    MUTABLE         reduce using rule 117 (expValor -> lenArreglo .)
    PUSH            reduce using rule 117 (expValor -> lenArreglo .)
    LOCAL           reduce using rule 117 (expValor -> lenArreglo .)
    GLOBAL          reduce using rule 117 (expValor -> lenArreglo .)
    DOSPUNTOS       reduce using rule 117 (expValor -> lenArreglo .)
    PUNTOCOMA       reduce using rule 117 (expValor -> lenArreglo .)
    PARDER          reduce using rule 117 (expValor -> lenArreglo .)
    COMA            reduce using rule 117 (expValor -> lenArreglo .)
    CORDER          reduce using rule 117 (expValor -> lenArreglo .)


state 67

    (118) expCHAR -> CHARID .

    MAS             reduce using rule 118 (expCHAR -> CHARID .)
    MENOS           reduce using rule 118 (expCHAR -> CHARID .)
    MULT            reduce using rule 118 (expCHAR -> CHARID .)
    DIV             reduce using rule 118 (expCHAR -> CHARID .)
    MOD             reduce using rule 118 (expCHAR -> CHARID .)
    POT             reduce using rule 118 (expCHAR -> CHARID .)
    MAYOR           reduce using rule 118 (expCHAR -> CHARID .)
    MENOR           reduce using rule 118 (expCHAR -> CHARID .)
    MAYORIGUAL      reduce using rule 118 (expCHAR -> CHARID .)
    MENORIGUAL      reduce using rule 118 (expCHAR -> CHARID .)
    IGUALES         reduce using rule 118 (expCHAR -> CHARID .)
    DISTINTOS       reduce using rule 118 (expCHAR -> CHARID .)
    OR              reduce using rule 118 (expCHAR -> CHARID .)
    AND             reduce using rule 118 (expCHAR -> CHARID .)
    ID              reduce using rule 118 (expCHAR -> CHARID .)
    PRINTLN         reduce using rule 118 (expCHAR -> CHARID .)
    PRINT           reduce using rule 118 (expCHAR -> CHARID .)
    IF              reduce using rule 118 (expCHAR -> CHARID .)
    RETURN          reduce using rule 118 (expCHAR -> CHARID .)
    WHILE           reduce using rule 118 (expCHAR -> CHARID .)
    FOR             reduce using rule 118 (expCHAR -> CHARID .)
    BREAK           reduce using rule 118 (expCHAR -> CHARID .)
    CONTINUE        reduce using rule 118 (expCHAR -> CHARID .)
    STRUCT          reduce using rule 118 (expCHAR -> CHARID .)
    MUTABLE         reduce using rule 118 (expCHAR -> CHARID .)
    PUSH            reduce using rule 118 (expCHAR -> CHARID .)
    LOCAL           reduce using rule 118 (expCHAR -> CHARID .)
    GLOBAL          reduce using rule 118 (expCHAR -> CHARID .)
    DOSPUNTOS       reduce using rule 118 (expCHAR -> CHARID .)
    PUNTOCOMA       reduce using rule 118 (expCHAR -> CHARID .)
    PARDER          reduce using rule 118 (expCHAR -> CHARID .)
    COMA            reduce using rule 118 (expCHAR -> CHARID .)
    CORDER          reduce using rule 118 (expCHAR -> CHARID .)


state 68

    (119) expNativas -> LOG10 . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 146


state 69

    (120) expNativas -> LOG . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 147


state 70

    (121) expNativas -> SIN . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 148


state 71

    (122) expNativas -> COS . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 149


state 72

    (123) expNativas -> TAN . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 150


state 73

    (124) expNativas -> SQRT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 151


state 74

    (125) expNativas -> UPPERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 152


state 75

    (126) expNativas -> LOWERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 153


state 76

    (127) expNativas -> PARSE . PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> PARSE . PARIZQ FLOAT64 COMA expresion PARDER

    PARIZQ          shift and go to state 154


state 77

    (129) expNativas -> TRUNC . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 155


state 78

    (130) expNativas -> FLOAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 156


state 79

    (131) expNativas -> STRING . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 157


state 80

    (132) expNativas -> TYPEOF . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 158


state 81

    (135) defArreglo -> CORIZQ . listParams CORDER
    (28) listParams -> . listParams COMA expresion
    (29) listParams -> . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    listParams                     shift and go to state 159
    expresion                      shift and go to state 97
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 82

    (140) popArreglo -> POP . NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> POP . NOT PARIZQ ID PARDER

    NOT             shift and go to state 160


state 83

    (142) lenArreglo -> LENGTH . PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> LENGTH . PARIZQ ID PARDER

    PARIZQ          shift and go to state 161


state 84

    (67) whileINS -> WHILE expresion . sentencia END
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118
    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 162
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 85

    (68) forINS -> FOR ID . IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> FOR ID . IN expresion sentencia END

    IN              shift and go to state 163


state 86

    (78) newStruct -> STRUCT ID . atributosStr END
    (80) atributosStr -> . atributosStr ID PUNTOCOMA
    (81) atributosStr -> . ID PUNTOCOMA
    (82) atributosStr -> . atributosStr ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA
    (83) atributosStr -> . ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA

    ID              shift and go to state 164

    atributosStr                   shift and go to state 165

state 87

    (79) newStruct -> MUTABLE STRUCT . ID atributosStr END

    ID              shift and go to state 166


state 88

    (144) pushArreglo -> PUSH NOT . PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> PUSH NOT . PARIZQ ID COMA expresion PARDER

    PARIZQ          shift and go to state 167


state 89

    (66) asignacionArreglo -> accesoArreglo IGUAL . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    accesoArreglo                  shift and go to state 63
    expresion                      shift and go to state 168
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 90

    (137) accesoArreglo -> accesoArreglo CORIZQ . expresion CORDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    accesoArreglo                  shift and go to state 63
    expresion                      shift and go to state 169
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 91

    (65) asignacionStruct -> accesoStruct IGUAL . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    accesoStruct                   shift and go to state 61
    expresion                      shift and go to state 170
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 92

    (134) accesoStruct -> accesoStruct PUNTO . ID

    ID              shift and go to state 171


state 93

    (18) funcionINS -> FUNCTION ID PARIZQ . PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (19) funcionINS -> FUNCTION ID PARIZQ . params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (20) funcionINS -> FUNCTION ID PARIZQ . PARDER sentencia END
    (21) funcionINS -> FUNCTION ID PARIZQ . params PARDER sentencia END
    (22) params -> . params COMA ID
    (23) params -> . params COMA ID DOSPUNTOS DOSPUNTOS tipos
    (24) params -> . ID
    (25) params -> . ID DOSPUNTOS DOSPUNTOS tipos

    PARDER          shift and go to state 173
    ID              shift and go to state 172

    params                         shift and go to state 174

state 94

    (16) declaracionglb -> ID IGUAL expresion .
    (17) declaracionglb -> ID IGUAL expresion . DOSPUNTOS DOSPUNTOS tipos
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 16 (declaracionglb -> ID IGUAL expresion .)
    DOSPUNTOS       shift and go to state 175
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 95

    (26) llamadaFunc -> ID PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MAS             reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MULT            reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    DIV             reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MOD             reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    POT             reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    IGUALES         reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    DISTINTOS       reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    OR              reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    AND             reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    ID              reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    PRINTLN         reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    PRINT           reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    IF              reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    RETURN          reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    WHILE           reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    FOR             reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    BREAK           reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    CONTINUE        reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    STRUCT          reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    MUTABLE         reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    PUSH            reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    LOCAL           reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    GLOBAL          reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    COMA            reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 26 (llamadaFunc -> ID PARIZQ PARDER .)


state 96

    (27) llamadaFunc -> ID PARIZQ listParams . PARDER
    (28) listParams -> listParams . COMA expresion

    PARDER          shift and go to state 176
    COMA            shift and go to state 177


state 97

    (29) listParams -> expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          reduce using rule 29 (listParams -> expresion .)
    COMA            reduce using rule 29 (listParams -> expresion .)
    CORDER          reduce using rule 29 (listParams -> expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 98

    (133) accesoStruct -> ID PUNTO ID .

    IGUAL           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    PUNTO           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MAS             reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MENOS           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MULT            reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    DIV             reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MOD             reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    POT             reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MAYOR           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MENOR           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    IGUALES         reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    DISTINTOS       reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    OR              reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    AND             reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    ID              reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    PRINTLN         reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    PRINT           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    IF              reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    RETURN          reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    WHILE           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    FOR             reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    BREAK           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    CONTINUE        reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    STRUCT          reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    MUTABLE         reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    PUSH            reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    LOCAL           reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    GLOBAL          reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    DOSPUNTOS       reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    PUNTOCOMA       reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    PARDER          reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    COMA            reduce using rule 133 (accesoStruct -> ID PUNTO ID .)
    CORDER          reduce using rule 133 (accesoStruct -> ID PUNTO ID .)


state 99

    (136) accesoArreglo -> ID CORIZQ expresion . CORDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    CORDER          shift and go to state 178
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 100

    (48) printINS -> PRINTLN PARIZQ listParams . PARDER
    (28) listParams -> listParams . COMA expresion

    PARDER          shift and go to state 179
    COMA            shift and go to state 177


state 101

    (49) printINS -> PRINTLN PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 49 (printINS -> PRINTLN PARIZQ PARDER .)


state 102

    (50) printINS -> PRINT PARIZQ listParams . PARDER
    (28) listParams -> listParams . COMA expresion

    PARDER          shift and go to state 180
    COMA            shift and go to state 177


state 103

    (51) printINS -> PRINT PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 51 (printINS -> PRINT PARIZQ PARDER .)


state 104

    (72) ifINS -> IF expresion sentencia . END
    (73) ifINS -> IF expresion sentencia . ELSE sentencia END
    (74) ifINS -> IF expresion sentencia . elseIfLista END
    (75) elseIfLista -> . ELSEIF expresion sentencia
    (76) elseIfLista -> . ELSEIF expresion sentencia ELSE sentencia
    (77) elseIfLista -> . ELSEIF expresion sentencia elseIfLista

    END             shift and go to state 181
    ELSE            shift and go to state 182
    ELSEIF          shift and go to state 184

    elseIfLista                    shift and go to state 183

state 105

    (86) expresion -> expresion MAS . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 185
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 106

    (87) expresion -> expresion MENOS . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 186
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 107

    (88) expresion -> expresion MULT . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 187
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 108

    (89) expresion -> expresion DIV . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 188
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 109

    (90) expresion -> expresion MOD . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 189
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 110

    (91) expresion -> expresion POT . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 190
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 111

    (92) expresion -> expresion MAYOR . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 191
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 112

    (93) expresion -> expresion MENOR . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 192
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 113

    (94) expresion -> expresion MAYORIGUAL . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 193
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 114

    (95) expresion -> expresion MENORIGUAL . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 194
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 115

    (96) expresion -> expresion IGUALES . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 195
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 116

    (97) expresion -> expresion DISTINTOS . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 196
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 117

    (98) expresion -> expresion OR . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 197
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 118

    (99) expresion -> expresion AND . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 198
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 119

    (47) sentencia -> instrucciones .
    (32) instrucciones -> instrucciones . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    END             reduce using rule 47 (sentencia -> instrucciones .)
    ELSE            reduce using rule 47 (sentencia -> instrucciones .)
    ELSEIF          reduce using rule 47 (sentencia -> instrucciones .)
    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    instruccion                    shift and go to state 199
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 120

    (33) instrucciones -> instruccion .

    ID              reduce using rule 33 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 33 (instrucciones -> instruccion .)
    PRINT           reduce using rule 33 (instrucciones -> instruccion .)
    IF              reduce using rule 33 (instrucciones -> instruccion .)
    RETURN          reduce using rule 33 (instrucciones -> instruccion .)
    WHILE           reduce using rule 33 (instrucciones -> instruccion .)
    FOR             reduce using rule 33 (instrucciones -> instruccion .)
    BREAK           reduce using rule 33 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 33 (instrucciones -> instruccion .)
    STRUCT          reduce using rule 33 (instrucciones -> instruccion .)
    MUTABLE         reduce using rule 33 (instrucciones -> instruccion .)
    PUSH            reduce using rule 33 (instrucciones -> instruccion .)
    LOCAL           reduce using rule 33 (instrucciones -> instruccion .)
    GLOBAL          reduce using rule 33 (instrucciones -> instruccion .)
    END             reduce using rule 33 (instrucciones -> instruccion .)
    ELSE            reduce using rule 33 (instrucciones -> instruccion .)
    ELSEIF          reduce using rule 33 (instrucciones -> instruccion .)


state 121

    (34) instruccion -> declaracionINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 200


state 122

    (35) instruccion -> printINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 201


state 123

    (36) instruccion -> llamadaFunc . PUNTOCOMA

    PUNTOCOMA       shift and go to state 202


state 124

    (37) instruccion -> ifINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 203


state 125

    (38) instruccion -> returnINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 204


state 126

    (39) instruccion -> whileINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 205


state 127

    (40) instruccion -> forINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 206


state 128

    (41) instruccion -> breakINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 207


state 129

    (42) instruccion -> continueINS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 208


state 130

    (43) instruccion -> newStruct . PUNTOCOMA

    PUNTOCOMA       shift and go to state 209


state 131

    (44) instruccion -> pushArreglo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 210


state 132

    (45) instruccion -> asignacionStruct . PUNTOCOMA

    PUNTOCOMA       shift and go to state 211


state 133

    (46) instruccion -> asignacionArreglo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 212


state 134

    (52) declaracionINS -> ID .
    (53) declaracionINS -> ID . IGUAL expresion
    (54) declaracionINS -> ID . IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (26) llamadaFunc -> ID . PARIZQ PARDER
    (27) llamadaFunc -> ID . PARIZQ listParams PARDER
    (133) accesoStruct -> ID . PUNTO ID
    (136) accesoArreglo -> ID . CORIZQ expresion CORDER

    PUNTOCOMA       reduce using rule 52 (declaracionINS -> ID .)
    IGUAL           shift and go to state 213
    PARIZQ          shift and go to state 41
    PUNTO           shift and go to state 42
    CORIZQ          shift and go to state 43


state 135

    (55) declaracionINS -> accesos . ID
    (56) declaracionINS -> accesos . ID IGUAL expresion
    (57) declaracionINS -> accesos . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos

    ID              shift and go to state 214


state 136

    (30) returnINS -> RETURN .
    (31) returnINS -> RETURN . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    PUNTOCOMA       reduce using rule 30 (returnINS -> RETURN .)
    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 215
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 137

    (70) breakINS -> BREAK .

    PUNTOCOMA       reduce using rule 70 (breakINS -> BREAK .)


state 138

    (71) continueINS -> CONTINUE .

    PUNTOCOMA       reduce using rule 71 (continueINS -> CONTINUE .)


state 139

    (63) accesos -> LOCAL .

    ID              reduce using rule 63 (accesos -> LOCAL .)


state 140

    (64) accesos -> GLOBAL .

    ID              reduce using rule 64 (accesos -> GLOBAL .)


state 141

    (84) expresion -> MENOS expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAS             reduce using rule 84 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 84 (expresion -> MENOS expresion .)
    MULT            reduce using rule 84 (expresion -> MENOS expresion .)
    DIV             reduce using rule 84 (expresion -> MENOS expresion .)
    MOD             reduce using rule 84 (expresion -> MENOS expresion .)
    POT             reduce using rule 84 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 84 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 84 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 84 (expresion -> MENOS expresion .)
    IGUALES         reduce using rule 84 (expresion -> MENOS expresion .)
    DISTINTOS       reduce using rule 84 (expresion -> MENOS expresion .)
    OR              reduce using rule 84 (expresion -> MENOS expresion .)
    AND             reduce using rule 84 (expresion -> MENOS expresion .)
    ID              reduce using rule 84 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 84 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 84 (expresion -> MENOS expresion .)
    IF              reduce using rule 84 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 84 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 84 (expresion -> MENOS expresion .)
    FOR             reduce using rule 84 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 84 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 84 (expresion -> MENOS expresion .)
    STRUCT          reduce using rule 84 (expresion -> MENOS expresion .)
    MUTABLE         reduce using rule 84 (expresion -> MENOS expresion .)
    PUSH            reduce using rule 84 (expresion -> MENOS expresion .)
    LOCAL           reduce using rule 84 (expresion -> MENOS expresion .)
    GLOBAL          reduce using rule 84 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 84 (expresion -> MENOS expresion .)
    PUNTOCOMA       reduce using rule 84 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 84 (expresion -> MENOS expresion .)
    COMA            reduce using rule 84 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 84 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULT            [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MOD             [ shift and go to state 109 ]
  ! POT             [ shift and go to state 110 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 142

    (85) expresion -> NOT expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAS             reduce using rule 85 (expresion -> NOT expresion .)
    MENOS           reduce using rule 85 (expresion -> NOT expresion .)
    MULT            reduce using rule 85 (expresion -> NOT expresion .)
    DIV             reduce using rule 85 (expresion -> NOT expresion .)
    MOD             reduce using rule 85 (expresion -> NOT expresion .)
    POT             reduce using rule 85 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 85 (expresion -> NOT expresion .)
    MENOR           reduce using rule 85 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 85 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 85 (expresion -> NOT expresion .)
    IGUALES         reduce using rule 85 (expresion -> NOT expresion .)
    DISTINTOS       reduce using rule 85 (expresion -> NOT expresion .)
    OR              reduce using rule 85 (expresion -> NOT expresion .)
    AND             reduce using rule 85 (expresion -> NOT expresion .)
    ID              reduce using rule 85 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 85 (expresion -> NOT expresion .)
    PRINT           reduce using rule 85 (expresion -> NOT expresion .)
    IF              reduce using rule 85 (expresion -> NOT expresion .)
    RETURN          reduce using rule 85 (expresion -> NOT expresion .)
    WHILE           reduce using rule 85 (expresion -> NOT expresion .)
    FOR             reduce using rule 85 (expresion -> NOT expresion .)
    BREAK           reduce using rule 85 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 85 (expresion -> NOT expresion .)
    STRUCT          reduce using rule 85 (expresion -> NOT expresion .)
    MUTABLE         reduce using rule 85 (expresion -> NOT expresion .)
    PUSH            reduce using rule 85 (expresion -> NOT expresion .)
    LOCAL           reduce using rule 85 (expresion -> NOT expresion .)
    GLOBAL          reduce using rule 85 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 85 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 85 (expresion -> NOT expresion .)
    PARDER          reduce using rule 85 (expresion -> NOT expresion .)
    COMA            reduce using rule 85 (expresion -> NOT expresion .)
    CORDER          reduce using rule 85 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULT            [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MOD             [ shift and go to state 109 ]
  ! POT             [ shift and go to state 110 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 143

    (101) expValor -> PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 216
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 144

    (136) accesoArreglo -> ID CORIZQ . expresion CORDER
    (139) cutArreglo -> ID CORIZQ . expresion DOSPUNTOS expresion CORDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 217
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 145

    (137) accesoArreglo -> accesoArreglo CORIZQ . expresion CORDER
    (138) cutArreglo -> accesoArreglo CORIZQ . expresion DOSPUNTOS expresion CORDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    accesoArreglo                  shift and go to state 63
    expresion                      shift and go to state 218
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 146

    (119) expNativas -> LOG10 PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 219
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 147

    (120) expNativas -> LOG PARIZQ . expresion COMA expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 220
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 148

    (121) expNativas -> SIN PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 221
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 149

    (122) expNativas -> COS PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 222
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 150

    (123) expNativas -> TAN PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 223
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 151

    (124) expNativas -> SQRT PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 224
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 152

    (125) expNativas -> UPPERCASE PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 225
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 153

    (126) expNativas -> LOWERCASE PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 226
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 154

    (127) expNativas -> PARSE PARIZQ . INT64 COMA expresion PARDER
    (128) expNativas -> PARSE PARIZQ . FLOAT64 COMA expresion PARDER

    INT64           shift and go to state 227
    FLOAT64         shift and go to state 228


state 155

    (129) expNativas -> TRUNC PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 229
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 156

    (130) expNativas -> FLOAT PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 230
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 157

    (131) expNativas -> STRING PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 231
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 158

    (132) expNativas -> TYPEOF PARIZQ . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 232
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 159

    (135) defArreglo -> CORIZQ listParams . CORDER
    (28) listParams -> listParams . COMA expresion

    CORDER          shift and go to state 233
    COMA            shift and go to state 177


state 160

    (140) popArreglo -> POP NOT . PARIZQ accesoArreglo PARDER
    (141) popArreglo -> POP NOT . PARIZQ ID PARDER

    PARIZQ          shift and go to state 234


state 161

    (142) lenArreglo -> LENGTH PARIZQ . accesoArreglo PARDER
    (143) lenArreglo -> LENGTH PARIZQ . ID PARDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    ID              shift and go to state 236

    accesoArreglo                  shift and go to state 235

state 162

    (67) whileINS -> WHILE expresion sentencia . END

    END             shift and go to state 237


state 163

    (68) forINS -> FOR ID IN . expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> FOR ID IN . expresion sentencia END
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 238
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 164

    (81) atributosStr -> ID . PUNTOCOMA
    (83) atributosStr -> ID . DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA

    PUNTOCOMA       shift and go to state 239
    DOSPUNTOS       shift and go to state 240


state 165

    (78) newStruct -> STRUCT ID atributosStr . END
    (80) atributosStr -> atributosStr . ID PUNTOCOMA
    (82) atributosStr -> atributosStr . ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA

    END             shift and go to state 242
    ID              shift and go to state 241


state 166

    (79) newStruct -> MUTABLE STRUCT ID . atributosStr END
    (80) atributosStr -> . atributosStr ID PUNTOCOMA
    (81) atributosStr -> . ID PUNTOCOMA
    (82) atributosStr -> . atributosStr ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA
    (83) atributosStr -> . ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA

    ID              shift and go to state 164

    atributosStr                   shift and go to state 243

state 167

    (144) pushArreglo -> PUSH NOT PARIZQ . accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> PUSH NOT PARIZQ . ID COMA expresion PARDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    ID              shift and go to state 245

    accesoArreglo                  shift and go to state 244

state 168

    (66) asignacionArreglo -> accesoArreglo IGUAL expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 66 (asignacionArreglo -> accesoArreglo IGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 169

    (137) accesoArreglo -> accesoArreglo CORIZQ expresion . CORDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    CORDER          shift and go to state 246
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 170

    (65) asignacionStruct -> accesoStruct IGUAL expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 65 (asignacionStruct -> accesoStruct IGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 171

    (134) accesoStruct -> accesoStruct PUNTO ID .

    IGUAL           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    PUNTO           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MAS             reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MENOS           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MULT            reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    DIV             reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MOD             reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    POT             reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MAYOR           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MENOR           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MAYORIGUAL      reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MENORIGUAL      reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    IGUALES         reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    DISTINTOS       reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    OR              reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    AND             reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    ID              reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    PRINTLN         reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    PRINT           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    IF              reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    RETURN          reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    WHILE           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    FOR             reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    BREAK           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    CONTINUE        reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    STRUCT          reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    MUTABLE         reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    PUSH            reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    LOCAL           reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    GLOBAL          reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    DOSPUNTOS       reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    PUNTOCOMA       reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    PARDER          reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    COMA            reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)
    CORDER          reduce using rule 134 (accesoStruct -> accesoStruct PUNTO ID .)


state 172

    (24) params -> ID .
    (25) params -> ID . DOSPUNTOS DOSPUNTOS tipos

    PARDER          reduce using rule 24 (params -> ID .)
    COMA            reduce using rule 24 (params -> ID .)
    DOSPUNTOS       shift and go to state 247


state 173

    (18) funcionINS -> FUNCTION ID PARIZQ PARDER . DOSPUNTOS DOSPUNTOS tipos sentencia END
    (20) funcionINS -> FUNCTION ID PARIZQ PARDER . sentencia END
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    DOSPUNTOS       shift and go to state 248
    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 249
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 174

    (19) funcionINS -> FUNCTION ID PARIZQ params . PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END
    (21) funcionINS -> FUNCTION ID PARIZQ params . PARDER sentencia END
    (22) params -> params . COMA ID
    (23) params -> params . COMA ID DOSPUNTOS DOSPUNTOS tipos

    PARDER          shift and go to state 250
    COMA            shift and go to state 251


state 175

    (17) declaracionglb -> ID IGUAL expresion DOSPUNTOS . DOSPUNTOS tipos

    DOSPUNTOS       shift and go to state 252


state 176

    (27) llamadaFunc -> ID PARIZQ listParams PARDER .

    PUNTOCOMA       reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MAS             reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MENOS           reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MULT            reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    DIV             reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MOD             reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    POT             reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MAYOR           reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MENOR           reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MAYORIGUAL      reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MENORIGUAL      reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    IGUALES         reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    DISTINTOS       reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    OR              reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    AND             reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    ID              reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    PRINTLN         reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    PRINT           reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    IF              reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    RETURN          reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    WHILE           reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    FOR             reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    BREAK           reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    CONTINUE        reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    STRUCT          reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    MUTABLE         reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    PUSH            reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    LOCAL           reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    GLOBAL          reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    DOSPUNTOS       reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    PARDER          reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    COMA            reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)
    CORDER          reduce using rule 27 (llamadaFunc -> ID PARIZQ listParams PARDER .)


state 177

    (28) listParams -> listParams COMA . expresion
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 253
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 178

    (136) accesoArreglo -> ID CORIZQ expresion CORDER .

    IGUAL           reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MAS             reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MENOS           reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MULT            reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    DIV             reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MOD             reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    POT             reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MENOR           reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    IGUALES         reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    DISTINTOS       reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    OR              reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    AND             reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    ID              reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    PRINTLN         reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    PRINT           reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    IF              reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    RETURN          reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    WHILE           reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    FOR             reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    BREAK           reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    CONTINUE        reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    STRUCT          reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    MUTABLE         reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    PUSH            reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    LOCAL           reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    GLOBAL          reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    DOSPUNTOS       reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    PUNTOCOMA       reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    PARDER          reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    COMA            reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)
    CORDER          reduce using rule 136 (accesoArreglo -> ID CORIZQ expresion CORDER .)


state 179

    (48) printINS -> PRINTLN PARIZQ listParams PARDER .

    PUNTOCOMA       reduce using rule 48 (printINS -> PRINTLN PARIZQ listParams PARDER .)


state 180

    (50) printINS -> PRINT PARIZQ listParams PARDER .

    PUNTOCOMA       reduce using rule 50 (printINS -> PRINT PARIZQ listParams PARDER .)


state 181

    (72) ifINS -> IF expresion sentencia END .

    PUNTOCOMA       reduce using rule 72 (ifINS -> IF expresion sentencia END .)


state 182

    (73) ifINS -> IF expresion sentencia ELSE . sentencia END
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 254
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 183

    (74) ifINS -> IF expresion sentencia elseIfLista . END

    END             shift and go to state 255


state 184

    (75) elseIfLista -> ELSEIF . expresion sentencia
    (76) elseIfLista -> ELSEIF . expresion sentencia ELSE sentencia
    (77) elseIfLista -> ELSEIF . expresion sentencia elseIfLista
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 256
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 185

    (86) expresion -> expresion MAS expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAS             reduce using rule 86 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 86 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 86 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 86 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 86 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 86 (expresion -> expresion MAS expresion .)
    IGUALES         reduce using rule 86 (expresion -> expresion MAS expresion .)
    DISTINTOS       reduce using rule 86 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 86 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 86 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 86 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 86 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 86 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 86 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 86 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 86 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 86 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 86 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 86 (expresion -> expresion MAS expresion .)
    STRUCT          reduce using rule 86 (expresion -> expresion MAS expresion .)
    MUTABLE         reduce using rule 86 (expresion -> expresion MAS expresion .)
    PUSH            reduce using rule 86 (expresion -> expresion MAS expresion .)
    LOCAL           reduce using rule 86 (expresion -> expresion MAS expresion .)
    GLOBAL          reduce using rule 86 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 86 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 86 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 86 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 86 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 86 (expresion -> expresion MAS expresion .)
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110

  ! MULT            [ reduce using rule 86 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 86 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 86 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 86 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 186

    (87) expresion -> expresion MENOS expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAS             reduce using rule 87 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 87 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 87 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion MENOS expresion .)
    IGUALES         reduce using rule 87 (expresion -> expresion MENOS expresion .)
    DISTINTOS       reduce using rule 87 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 87 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 87 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 87 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 87 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 87 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 87 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 87 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion MENOS expresion .)
    STRUCT          reduce using rule 87 (expresion -> expresion MENOS expresion .)
    MUTABLE         reduce using rule 87 (expresion -> expresion MENOS expresion .)
    PUSH            reduce using rule 87 (expresion -> expresion MENOS expresion .)
    LOCAL           reduce using rule 87 (expresion -> expresion MENOS expresion .)
    GLOBAL          reduce using rule 87 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 87 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 87 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion MENOS expresion .)
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110

  ! MULT            [ reduce using rule 87 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 87 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 87 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 87 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 187

    (88) expresion -> expresion MULT expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAS             reduce using rule 88 (expresion -> expresion MULT expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion MULT expresion .)
    MULT            reduce using rule 88 (expresion -> expresion MULT expresion .)
    DIV             reduce using rule 88 (expresion -> expresion MULT expresion .)
    MOD             reduce using rule 88 (expresion -> expresion MULT expresion .)
    MAYOR           reduce using rule 88 (expresion -> expresion MULT expresion .)
    MENOR           reduce using rule 88 (expresion -> expresion MULT expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion MULT expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion MULT expresion .)
    IGUALES         reduce using rule 88 (expresion -> expresion MULT expresion .)
    DISTINTOS       reduce using rule 88 (expresion -> expresion MULT expresion .)
    OR              reduce using rule 88 (expresion -> expresion MULT expresion .)
    AND             reduce using rule 88 (expresion -> expresion MULT expresion .)
    ID              reduce using rule 88 (expresion -> expresion MULT expresion .)
    PRINTLN         reduce using rule 88 (expresion -> expresion MULT expresion .)
    PRINT           reduce using rule 88 (expresion -> expresion MULT expresion .)
    IF              reduce using rule 88 (expresion -> expresion MULT expresion .)
    RETURN          reduce using rule 88 (expresion -> expresion MULT expresion .)
    WHILE           reduce using rule 88 (expresion -> expresion MULT expresion .)
    FOR             reduce using rule 88 (expresion -> expresion MULT expresion .)
    BREAK           reduce using rule 88 (expresion -> expresion MULT expresion .)
    CONTINUE        reduce using rule 88 (expresion -> expresion MULT expresion .)
    STRUCT          reduce using rule 88 (expresion -> expresion MULT expresion .)
    MUTABLE         reduce using rule 88 (expresion -> expresion MULT expresion .)
    PUSH            reduce using rule 88 (expresion -> expresion MULT expresion .)
    LOCAL           reduce using rule 88 (expresion -> expresion MULT expresion .)
    GLOBAL          reduce using rule 88 (expresion -> expresion MULT expresion .)
    DOSPUNTOS       reduce using rule 88 (expresion -> expresion MULT expresion .)
    PUNTOCOMA       reduce using rule 88 (expresion -> expresion MULT expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion MULT expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MULT expresion .)
    CORDER          reduce using rule 88 (expresion -> expresion MULT expresion .)
    POT             shift and go to state 110

  ! POT             [ reduce using rule 88 (expresion -> expresion MULT expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULT            [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MOD             [ shift and go to state 109 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 188

    (89) expresion -> expresion DIV expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAS             reduce using rule 89 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 89 (expresion -> expresion DIV expresion .)
    MULT            reduce using rule 89 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 89 (expresion -> expresion DIV expresion .)
    MOD             reduce using rule 89 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 89 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 89 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 89 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 89 (expresion -> expresion DIV expresion .)
    IGUALES         reduce using rule 89 (expresion -> expresion DIV expresion .)
    DISTINTOS       reduce using rule 89 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 89 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 89 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 89 (expresion -> expresion DIV expresion .)
    PRINTLN         reduce using rule 89 (expresion -> expresion DIV expresion .)
    PRINT           reduce using rule 89 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 89 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 89 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 89 (expresion -> expresion DIV expresion .)
    FOR             reduce using rule 89 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 89 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 89 (expresion -> expresion DIV expresion .)
    STRUCT          reduce using rule 89 (expresion -> expresion DIV expresion .)
    MUTABLE         reduce using rule 89 (expresion -> expresion DIV expresion .)
    PUSH            reduce using rule 89 (expresion -> expresion DIV expresion .)
    LOCAL           reduce using rule 89 (expresion -> expresion DIV expresion .)
    GLOBAL          reduce using rule 89 (expresion -> expresion DIV expresion .)
    DOSPUNTOS       reduce using rule 89 (expresion -> expresion DIV expresion .)
    PUNTOCOMA       reduce using rule 89 (expresion -> expresion DIV expresion .)
    PARDER          reduce using rule 89 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 89 (expresion -> expresion DIV expresion .)
    CORDER          reduce using rule 89 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 110

  ! POT             [ reduce using rule 89 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULT            [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MOD             [ shift and go to state 109 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 189

    (90) expresion -> expresion MOD expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAS             reduce using rule 90 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 90 (expresion -> expresion MOD expresion .)
    MULT            reduce using rule 90 (expresion -> expresion MOD expresion .)
    DIV             reduce using rule 90 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 90 (expresion -> expresion MOD expresion .)
    MAYOR           reduce using rule 90 (expresion -> expresion MOD expresion .)
    MENOR           reduce using rule 90 (expresion -> expresion MOD expresion .)
    MAYORIGUAL      reduce using rule 90 (expresion -> expresion MOD expresion .)
    MENORIGUAL      reduce using rule 90 (expresion -> expresion MOD expresion .)
    IGUALES         reduce using rule 90 (expresion -> expresion MOD expresion .)
    DISTINTOS       reduce using rule 90 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 90 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 90 (expresion -> expresion MOD expresion .)
    ID              reduce using rule 90 (expresion -> expresion MOD expresion .)
    PRINTLN         reduce using rule 90 (expresion -> expresion MOD expresion .)
    PRINT           reduce using rule 90 (expresion -> expresion MOD expresion .)
    IF              reduce using rule 90 (expresion -> expresion MOD expresion .)
    RETURN          reduce using rule 90 (expresion -> expresion MOD expresion .)
    WHILE           reduce using rule 90 (expresion -> expresion MOD expresion .)
    FOR             reduce using rule 90 (expresion -> expresion MOD expresion .)
    BREAK           reduce using rule 90 (expresion -> expresion MOD expresion .)
    CONTINUE        reduce using rule 90 (expresion -> expresion MOD expresion .)
    STRUCT          reduce using rule 90 (expresion -> expresion MOD expresion .)
    MUTABLE         reduce using rule 90 (expresion -> expresion MOD expresion .)
    PUSH            reduce using rule 90 (expresion -> expresion MOD expresion .)
    LOCAL           reduce using rule 90 (expresion -> expresion MOD expresion .)
    GLOBAL          reduce using rule 90 (expresion -> expresion MOD expresion .)
    DOSPUNTOS       reduce using rule 90 (expresion -> expresion MOD expresion .)
    PUNTOCOMA       reduce using rule 90 (expresion -> expresion MOD expresion .)
    PARDER          reduce using rule 90 (expresion -> expresion MOD expresion .)
    COMA            reduce using rule 90 (expresion -> expresion MOD expresion .)
    CORDER          reduce using rule 90 (expresion -> expresion MOD expresion .)
    POT             shift and go to state 110

  ! POT             [ reduce using rule 90 (expresion -> expresion MOD expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULT            [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MOD             [ shift and go to state 109 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 190

    (91) expresion -> expresion POT expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAS             reduce using rule 91 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 91 (expresion -> expresion POT expresion .)
    MULT            reduce using rule 91 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 91 (expresion -> expresion POT expresion .)
    MOD             reduce using rule 91 (expresion -> expresion POT expresion .)
    MAYOR           reduce using rule 91 (expresion -> expresion POT expresion .)
    MENOR           reduce using rule 91 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 91 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 91 (expresion -> expresion POT expresion .)
    IGUALES         reduce using rule 91 (expresion -> expresion POT expresion .)
    DISTINTOS       reduce using rule 91 (expresion -> expresion POT expresion .)
    OR              reduce using rule 91 (expresion -> expresion POT expresion .)
    AND             reduce using rule 91 (expresion -> expresion POT expresion .)
    ID              reduce using rule 91 (expresion -> expresion POT expresion .)
    PRINTLN         reduce using rule 91 (expresion -> expresion POT expresion .)
    PRINT           reduce using rule 91 (expresion -> expresion POT expresion .)
    IF              reduce using rule 91 (expresion -> expresion POT expresion .)
    RETURN          reduce using rule 91 (expresion -> expresion POT expresion .)
    WHILE           reduce using rule 91 (expresion -> expresion POT expresion .)
    FOR             reduce using rule 91 (expresion -> expresion POT expresion .)
    BREAK           reduce using rule 91 (expresion -> expresion POT expresion .)
    CONTINUE        reduce using rule 91 (expresion -> expresion POT expresion .)
    STRUCT          reduce using rule 91 (expresion -> expresion POT expresion .)
    MUTABLE         reduce using rule 91 (expresion -> expresion POT expresion .)
    PUSH            reduce using rule 91 (expresion -> expresion POT expresion .)
    LOCAL           reduce using rule 91 (expresion -> expresion POT expresion .)
    GLOBAL          reduce using rule 91 (expresion -> expresion POT expresion .)
    DOSPUNTOS       reduce using rule 91 (expresion -> expresion POT expresion .)
    PUNTOCOMA       reduce using rule 91 (expresion -> expresion POT expresion .)
    PARDER          reduce using rule 91 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 91 (expresion -> expresion POT expresion .)
    CORDER          reduce using rule 91 (expresion -> expresion POT expresion .)
    POT             shift and go to state 110

  ! POT             [ reduce using rule 91 (expresion -> expresion POT expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULT            [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MOD             [ shift and go to state 109 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 191

    (92) expresion -> expresion MAYOR expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    IGUALES         reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    DISTINTOS       reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    PRINTLN         reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    PRINT           reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    STRUCT          reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    MUTABLE         reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    PUSH            reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    LOCAL           reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    GLOBAL          reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    DOSPUNTOS       reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 92 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110

  ! MAS             [ reduce using rule 92 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 92 (expresion -> expresion MAYOR expresion .) ]
  ! MULT            [ reduce using rule 92 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 92 (expresion -> expresion MAYOR expresion .) ]
  ! MOD             [ reduce using rule 92 (expresion -> expresion MAYOR expresion .) ]
  ! POT             [ reduce using rule 92 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 192

    (93) expresion -> expresion MENOR expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 93 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 93 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 93 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 93 (expresion -> expresion MENOR expresion .)
    IGUALES         reduce using rule 93 (expresion -> expresion MENOR expresion .)
    DISTINTOS       reduce using rule 93 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 93 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 93 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 93 (expresion -> expresion MENOR expresion .)
    PRINTLN         reduce using rule 93 (expresion -> expresion MENOR expresion .)
    PRINT           reduce using rule 93 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 93 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 93 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 93 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 93 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 93 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 93 (expresion -> expresion MENOR expresion .)
    STRUCT          reduce using rule 93 (expresion -> expresion MENOR expresion .)
    MUTABLE         reduce using rule 93 (expresion -> expresion MENOR expresion .)
    PUSH            reduce using rule 93 (expresion -> expresion MENOR expresion .)
    LOCAL           reduce using rule 93 (expresion -> expresion MENOR expresion .)
    GLOBAL          reduce using rule 93 (expresion -> expresion MENOR expresion .)
    DOSPUNTOS       reduce using rule 93 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 93 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 93 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 93 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 93 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110

  ! MAS             [ reduce using rule 93 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> expresion MENOR expresion .) ]
  ! MULT            [ reduce using rule 93 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 93 (expresion -> expresion MENOR expresion .) ]
  ! MOD             [ reduce using rule 93 (expresion -> expresion MENOR expresion .) ]
  ! POT             [ reduce using rule 93 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 193

    (94) expresion -> expresion MAYORIGUAL expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALES         reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTOS       reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    PRINTLN         reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    STRUCT          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MUTABLE         reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    PUSH            reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    LOCAL           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    GLOBAL          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110

  ! MAS             [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MULT            [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 194

    (95) expresion -> expresion MENORIGUAL expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    MAYOR           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    IGUALES         reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTOS       reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    PRINTLN         reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    STRUCT          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MUTABLE         reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    PUSH            reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    LOCAL           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    GLOBAL          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110

  ! MAS             [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MULT            [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 195

    (96) expresion -> expresion IGUALES expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    IGUALES         reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    DISTINTOS       reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    OR              reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    AND             reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    ID              reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    PRINTLN         reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    PRINT           reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    IF              reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    RETURN          reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    WHILE           reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    FOR             reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    BREAK           reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    CONTINUE        reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    STRUCT          reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    MUTABLE         reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    PUSH            reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    LOCAL           reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    GLOBAL          reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    DOSPUNTOS       reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    PUNTOCOMA       reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    PARDER          reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    COMA            reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    CORDER          reduce using rule 96 (expresion -> expresion IGUALES expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114

  ! MAS             [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! MULT            [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! DIV             [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! MOD             [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! POT             [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! MAYOR           [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! MENOR           [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! MENORIGUAL      [ reduce using rule 96 (expresion -> expresion IGUALES expresion .) ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 196

    (97) expresion -> expresion DISTINTOS expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    IGUALES         reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    DISTINTOS       reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    OR              reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    AND             reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    ID              reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    PRINTLN         reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    PRINT           reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    IF              reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    RETURN          reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    WHILE           reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    FOR             reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    BREAK           reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    CONTINUE        reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    STRUCT          reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    MUTABLE         reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    PUSH            reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    LOCAL           reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    GLOBAL          reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    DOSPUNTOS       reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    PUNTOCOMA       reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    PARDER          reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    COMA            reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    CORDER          reduce using rule 97 (expresion -> expresion DISTINTOS expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114

  ! MAS             [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! MULT            [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! DIV             [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! MOD             [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! POT             [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! MAYOR           [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! MENOR           [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 97 (expresion -> expresion DISTINTOS expresion .) ]
  ! IGUALES         [ shift and go to state 115 ]
  ! DISTINTOS       [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 197

    (98) expresion -> expresion OR expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    OR              reduce using rule 98 (expresion -> expresion OR expresion .)
    ID              reduce using rule 98 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 98 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 98 (expresion -> expresion OR expresion .)
    IF              reduce using rule 98 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 98 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 98 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 98 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 98 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 98 (expresion -> expresion OR expresion .)
    STRUCT          reduce using rule 98 (expresion -> expresion OR expresion .)
    MUTABLE         reduce using rule 98 (expresion -> expresion OR expresion .)
    PUSH            reduce using rule 98 (expresion -> expresion OR expresion .)
    LOCAL           reduce using rule 98 (expresion -> expresion OR expresion .)
    GLOBAL          reduce using rule 98 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 98 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 98 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 98 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 98 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 98 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    AND             shift and go to state 118

  ! MAS             [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! MULT            [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! IGUALES         [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! DISTINTOS       [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 98 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 117 ]


state 198

    (99) expresion -> expresion AND expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    OR              reduce using rule 99 (expresion -> expresion AND expresion .)
    AND             reduce using rule 99 (expresion -> expresion AND expresion .)
    ID              reduce using rule 99 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 99 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 99 (expresion -> expresion AND expresion .)
    IF              reduce using rule 99 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 99 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 99 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 99 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 99 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 99 (expresion -> expresion AND expresion .)
    STRUCT          reduce using rule 99 (expresion -> expresion AND expresion .)
    MUTABLE         reduce using rule 99 (expresion -> expresion AND expresion .)
    PUSH            reduce using rule 99 (expresion -> expresion AND expresion .)
    LOCAL           reduce using rule 99 (expresion -> expresion AND expresion .)
    GLOBAL          reduce using rule 99 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 99 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 99 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 99 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 99 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 99 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116

  ! MAS             [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MULT            [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! IGUALES         [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! DISTINTOS       [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 199

    (32) instrucciones -> instrucciones instruccion .

    ID              reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    STRUCT          reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    MUTABLE         reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    PUSH            reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    LOCAL           reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    GLOBAL          reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    END             reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 32 (instrucciones -> instrucciones instruccion .)
    ELSEIF          reduce using rule 32 (instrucciones -> instrucciones instruccion .)


state 200

    (34) instruccion -> declaracionINS PUNTOCOMA .

    ID              reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    PRINTLN         reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    PRINT           reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    IF              reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    RETURN          reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    WHILE           reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    FOR             reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    BREAK           reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    CONTINUE        reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    STRUCT          reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    MUTABLE         reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    PUSH            reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    LOCAL           reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    GLOBAL          reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    END             reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    ELSE            reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)
    ELSEIF          reduce using rule 34 (instruccion -> declaracionINS PUNTOCOMA .)


state 201

    (35) instruccion -> printINS PUNTOCOMA .

    ID              reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    PRINTLN         reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    PRINT           reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    IF              reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    RETURN          reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    WHILE           reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    FOR             reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    BREAK           reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    CONTINUE        reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    STRUCT          reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    MUTABLE         reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    PUSH            reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    LOCAL           reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    GLOBAL          reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    END             reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    ELSE            reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)
    ELSEIF          reduce using rule 35 (instruccion -> printINS PUNTOCOMA .)


state 202

    (36) instruccion -> llamadaFunc PUNTOCOMA .

    ID              reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    PRINTLN         reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    PRINT           reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    IF              reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    RETURN          reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    WHILE           reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    FOR             reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    BREAK           reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    CONTINUE        reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    STRUCT          reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    MUTABLE         reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    PUSH            reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    LOCAL           reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    GLOBAL          reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    END             reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    ELSE            reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)
    ELSEIF          reduce using rule 36 (instruccion -> llamadaFunc PUNTOCOMA .)


state 203

    (37) instruccion -> ifINS PUNTOCOMA .

    ID              reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    PRINTLN         reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    PRINT           reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    IF              reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    RETURN          reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    WHILE           reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    FOR             reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    BREAK           reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    CONTINUE        reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    STRUCT          reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    MUTABLE         reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    PUSH            reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    LOCAL           reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    GLOBAL          reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    END             reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    ELSE            reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)
    ELSEIF          reduce using rule 37 (instruccion -> ifINS PUNTOCOMA .)


state 204

    (38) instruccion -> returnINS PUNTOCOMA .

    ID              reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    PRINTLN         reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    PRINT           reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    IF              reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    RETURN          reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    WHILE           reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    FOR             reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    BREAK           reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    CONTINUE        reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    STRUCT          reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    MUTABLE         reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    PUSH            reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    LOCAL           reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    GLOBAL          reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    END             reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    ELSE            reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)
    ELSEIF          reduce using rule 38 (instruccion -> returnINS PUNTOCOMA .)


state 205

    (39) instruccion -> whileINS PUNTOCOMA .

    ID              reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    PRINTLN         reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    PRINT           reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    IF              reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    RETURN          reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    WHILE           reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    FOR             reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    BREAK           reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    CONTINUE        reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    STRUCT          reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    MUTABLE         reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    PUSH            reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    LOCAL           reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    GLOBAL          reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    END             reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    ELSE            reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)
    ELSEIF          reduce using rule 39 (instruccion -> whileINS PUNTOCOMA .)


state 206

    (40) instruccion -> forINS PUNTOCOMA .

    ID              reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    PRINTLN         reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    PRINT           reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    IF              reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    RETURN          reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    WHILE           reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    FOR             reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    BREAK           reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    CONTINUE        reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    STRUCT          reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    MUTABLE         reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    PUSH            reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    LOCAL           reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    GLOBAL          reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    END             reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    ELSE            reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)
    ELSEIF          reduce using rule 40 (instruccion -> forINS PUNTOCOMA .)


state 207

    (41) instruccion -> breakINS PUNTOCOMA .

    ID              reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    PRINTLN         reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    PRINT           reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    IF              reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    RETURN          reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    WHILE           reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    FOR             reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    BREAK           reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    CONTINUE        reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    STRUCT          reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    MUTABLE         reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    PUSH            reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    LOCAL           reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    GLOBAL          reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    END             reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    ELSE            reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)
    ELSEIF          reduce using rule 41 (instruccion -> breakINS PUNTOCOMA .)


state 208

    (42) instruccion -> continueINS PUNTOCOMA .

    ID              reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    PRINTLN         reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    PRINT           reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    IF              reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    RETURN          reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    WHILE           reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    FOR             reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    BREAK           reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    CONTINUE        reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    STRUCT          reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    MUTABLE         reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    PUSH            reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    LOCAL           reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    GLOBAL          reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    END             reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    ELSE            reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)
    ELSEIF          reduce using rule 42 (instruccion -> continueINS PUNTOCOMA .)


state 209

    (43) instruccion -> newStruct PUNTOCOMA .

    ID              reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    PRINTLN         reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    PRINT           reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    IF              reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    RETURN          reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    WHILE           reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    FOR             reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    BREAK           reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    CONTINUE        reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    STRUCT          reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    MUTABLE         reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    PUSH            reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    LOCAL           reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    GLOBAL          reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    END             reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    ELSE            reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)
    ELSEIF          reduce using rule 43 (instruccion -> newStruct PUNTOCOMA .)


state 210

    (44) instruccion -> pushArreglo PUNTOCOMA .

    ID              reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    PRINTLN         reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    PRINT           reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    IF              reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    RETURN          reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    WHILE           reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    FOR             reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    BREAK           reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    CONTINUE        reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    STRUCT          reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    MUTABLE         reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    PUSH            reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    LOCAL           reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    GLOBAL          reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    END             reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    ELSE            reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)
    ELSEIF          reduce using rule 44 (instruccion -> pushArreglo PUNTOCOMA .)


state 211

    (45) instruccion -> asignacionStruct PUNTOCOMA .

    ID              reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    PRINTLN         reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    PRINT           reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    IF              reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    RETURN          reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    WHILE           reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    FOR             reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    BREAK           reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    CONTINUE        reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    STRUCT          reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    MUTABLE         reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    PUSH            reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    LOCAL           reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    GLOBAL          reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    END             reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    ELSE            reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)
    ELSEIF          reduce using rule 45 (instruccion -> asignacionStruct PUNTOCOMA .)


state 212

    (46) instruccion -> asignacionArreglo PUNTOCOMA .

    ID              reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    PRINTLN         reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    PRINT           reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    IF              reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    RETURN          reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    WHILE           reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    FOR             reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    BREAK           reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    CONTINUE        reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    STRUCT          reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    MUTABLE         reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    PUSH            reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    LOCAL           reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    GLOBAL          reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    END             reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    ELSE            reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)
    ELSEIF          reduce using rule 46 (instruccion -> asignacionArreglo PUNTOCOMA .)


state 213

    (53) declaracionINS -> ID IGUAL . expresion
    (54) declaracionINS -> ID IGUAL . expresion DOSPUNTOS DOSPUNTOS tipos
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 257
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 214

    (55) declaracionINS -> accesos ID .
    (56) declaracionINS -> accesos ID . IGUAL expresion
    (57) declaracionINS -> accesos ID . IGUAL expresion DOSPUNTOS DOSPUNTOS tipos

    PUNTOCOMA       reduce using rule 55 (declaracionINS -> accesos ID .)
    IGUAL           shift and go to state 258


state 215

    (31) returnINS -> RETURN expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 31 (returnINS -> RETURN expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 216

    (101) expValor -> PARIZQ expresion PARDER .

    MAS             reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    MULT            reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    MOD             reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    POT             reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    OR              reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    AND             reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    ID              reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    PRINT           reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    IF              reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    PUSH            reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 101 (expValor -> PARIZQ expresion PARDER .)


state 217

    (136) accesoArreglo -> ID CORIZQ expresion . CORDER
    (139) cutArreglo -> ID CORIZQ expresion . DOSPUNTOS expresion CORDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    CORDER          shift and go to state 178
    DOSPUNTOS       shift and go to state 259
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 218

    (137) accesoArreglo -> accesoArreglo CORIZQ expresion . CORDER
    (138) cutArreglo -> accesoArreglo CORIZQ expresion . DOSPUNTOS expresion CORDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    CORDER          shift and go to state 246
    DOSPUNTOS       shift and go to state 260
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 219

    (119) expNativas -> LOG10 PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 261
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 220

    (120) expNativas -> LOG PARIZQ expresion . COMA expresion PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    COMA            shift and go to state 262
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 221

    (121) expNativas -> SIN PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 263
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 222

    (122) expNativas -> COS PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 264
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 223

    (123) expNativas -> TAN PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 265
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 224

    (124) expNativas -> SQRT PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 266
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 225

    (125) expNativas -> UPPERCASE PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 267
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 226

    (126) expNativas -> LOWERCASE PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 268
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 227

    (127) expNativas -> PARSE PARIZQ INT64 . COMA expresion PARDER

    COMA            shift and go to state 269


state 228

    (128) expNativas -> PARSE PARIZQ FLOAT64 . COMA expresion PARDER

    COMA            shift and go to state 270


state 229

    (129) expNativas -> TRUNC PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 271
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 230

    (130) expNativas -> FLOAT PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 272
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 231

    (131) expNativas -> STRING PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 273
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 232

    (132) expNativas -> TYPEOF PARIZQ expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 274
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 233

    (135) defArreglo -> CORIZQ listParams CORDER .

    MAS             reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    MENOS           reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    MULT            reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    DIV             reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    MOD             reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    POT             reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    MAYOR           reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    MENOR           reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    MAYORIGUAL      reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    MENORIGUAL      reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    IGUALES         reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    DISTINTOS       reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    OR              reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    AND             reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    ID              reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    PRINTLN         reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    PRINT           reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    IF              reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    RETURN          reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    WHILE           reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    FOR             reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    BREAK           reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    CONTINUE        reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    STRUCT          reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    MUTABLE         reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    PUSH            reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    LOCAL           reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    GLOBAL          reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    DOSPUNTOS       reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    PUNTOCOMA       reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    PARDER          reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    COMA            reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)
    CORDER          reduce using rule 135 (defArreglo -> CORIZQ listParams CORDER .)


state 234

    (140) popArreglo -> POP NOT PARIZQ . accesoArreglo PARDER
    (141) popArreglo -> POP NOT PARIZQ . ID PARDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    ID              shift and go to state 276

    accesoArreglo                  shift and go to state 275

state 235

    (142) lenArreglo -> LENGTH PARIZQ accesoArreglo . PARDER
    (137) accesoArreglo -> accesoArreglo . CORIZQ expresion CORDER

    PARDER          shift and go to state 277
    CORIZQ          shift and go to state 90


state 236

    (143) lenArreglo -> LENGTH PARIZQ ID . PARDER
    (136) accesoArreglo -> ID . CORIZQ expresion CORDER

    PARDER          shift and go to state 278
    CORIZQ          shift and go to state 43


state 237

    (67) whileINS -> WHILE expresion sentencia END .

    PUNTOCOMA       reduce using rule 67 (whileINS -> WHILE expresion sentencia END .)


state 238

    (68) forINS -> FOR ID IN expresion . DOSPUNTOS expresion sentencia END
    (69) forINS -> FOR ID IN expresion . sentencia END
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    DOSPUNTOS       shift and go to state 279
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118
    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 280
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 239

    (81) atributosStr -> ID PUNTOCOMA .

    END             reduce using rule 81 (atributosStr -> ID PUNTOCOMA .)
    ID              reduce using rule 81 (atributosStr -> ID PUNTOCOMA .)


state 240

    (83) atributosStr -> ID DOSPUNTOS . DOSPUNTOS tipos PUNTOCOMA

    DOSPUNTOS       shift and go to state 281


state 241

    (80) atributosStr -> atributosStr ID . PUNTOCOMA
    (82) atributosStr -> atributosStr ID . DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA

    PUNTOCOMA       shift and go to state 282
    DOSPUNTOS       shift and go to state 283


state 242

    (78) newStruct -> STRUCT ID atributosStr END .

    PUNTOCOMA       reduce using rule 78 (newStruct -> STRUCT ID atributosStr END .)


state 243

    (79) newStruct -> MUTABLE STRUCT ID atributosStr . END
    (80) atributosStr -> atributosStr . ID PUNTOCOMA
    (82) atributosStr -> atributosStr . ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA

    END             shift and go to state 284
    ID              shift and go to state 241


state 244

    (144) pushArreglo -> PUSH NOT PARIZQ accesoArreglo . COMA expresion PARDER
    (137) accesoArreglo -> accesoArreglo . CORIZQ expresion CORDER

    COMA            shift and go to state 285
    CORIZQ          shift and go to state 90


state 245

    (145) pushArreglo -> PUSH NOT PARIZQ ID . COMA expresion PARDER
    (136) accesoArreglo -> ID . CORIZQ expresion CORDER

    COMA            shift and go to state 286
    CORIZQ          shift and go to state 43


state 246

    (137) accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .

    IGUAL           reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MAS             reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MENOS           reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MULT            reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    DIV             reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MOD             reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    POT             reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MENOR           reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    IGUALES         reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    DISTINTOS       reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    OR              reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    AND             reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    ID              reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    PRINTLN         reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    PRINT           reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    IF              reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    RETURN          reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    WHILE           reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    FOR             reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    BREAK           reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    CONTINUE        reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    STRUCT          reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    MUTABLE         reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    PUSH            reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    LOCAL           reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    GLOBAL          reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    DOSPUNTOS       reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    PUNTOCOMA       reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    PARDER          reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    COMA            reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)
    CORDER          reduce using rule 137 (accesoArreglo -> accesoArreglo CORIZQ expresion CORDER .)


state 247

    (25) params -> ID DOSPUNTOS . DOSPUNTOS tipos

    DOSPUNTOS       shift and go to state 287


state 248

    (18) funcionINS -> FUNCTION ID PARIZQ PARDER DOSPUNTOS . DOSPUNTOS tipos sentencia END

    DOSPUNTOS       shift and go to state 288


state 249

    (20) funcionINS -> FUNCTION ID PARIZQ PARDER sentencia . END

    END             shift and go to state 289


state 250

    (19) funcionINS -> FUNCTION ID PARIZQ params PARDER . DOSPUNTOS DOSPUNTOS tipos sentencia END
    (21) funcionINS -> FUNCTION ID PARIZQ params PARDER . sentencia END
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    DOSPUNTOS       shift and go to state 290
    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 291
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 251

    (22) params -> params COMA . ID
    (23) params -> params COMA . ID DOSPUNTOS DOSPUNTOS tipos

    ID              shift and go to state 292


state 252

    (17) declaracionglb -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS . tipos
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 293

state 253

    (28) listParams -> listParams COMA expresion .
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          reduce using rule 28 (listParams -> listParams COMA expresion .)
    COMA            reduce using rule 28 (listParams -> listParams COMA expresion .)
    CORDER          reduce using rule 28 (listParams -> listParams COMA expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 254

    (73) ifINS -> IF expresion sentencia ELSE sentencia . END

    END             shift and go to state 299


state 255

    (74) ifINS -> IF expresion sentencia elseIfLista END .

    PUNTOCOMA       reduce using rule 74 (ifINS -> IF expresion sentencia elseIfLista END .)


state 256

    (75) elseIfLista -> ELSEIF expresion . sentencia
    (76) elseIfLista -> ELSEIF expresion . sentencia ELSE sentencia
    (77) elseIfLista -> ELSEIF expresion . sentencia elseIfLista
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118
    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 300
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 257

    (53) declaracionINS -> ID IGUAL expresion .
    (54) declaracionINS -> ID IGUAL expresion . DOSPUNTOS DOSPUNTOS tipos
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 53 (declaracionINS -> ID IGUAL expresion .)
    DOSPUNTOS       shift and go to state 301
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 258

    (56) declaracionINS -> accesos ID IGUAL . expresion
    (57) declaracionINS -> accesos ID IGUAL . expresion DOSPUNTOS DOSPUNTOS tipos
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 302
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 259

    (139) cutArreglo -> ID CORIZQ expresion DOSPUNTOS . expresion CORDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 303
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 260

    (138) cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS . expresion CORDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    accesoArreglo                  shift and go to state 63
    expresion                      shift and go to state 304
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 261

    (119) expNativas -> LOG10 PARIZQ expresion PARDER .

    MAS             reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    MENOS           reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    MULT            reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    DIV             reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    MOD             reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    POT             reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    MENOR           reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    OR              reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    AND             reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    ID              reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    PRINT           reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    IF              reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    RETURN          reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    WHILE           reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    FOR             reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    BREAK           reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    PUSH            reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    PARDER          reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    COMA            reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)
    CORDER          reduce using rule 119 (expNativas -> LOG10 PARIZQ expresion PARDER .)


state 262

    (120) expNativas -> LOG PARIZQ expresion COMA . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 305
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 263

    (121) expNativas -> SIN PARIZQ expresion PARDER .

    MAS             reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    MULT            reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    DIV             reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    MOD             reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    POT             reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    MENOR           reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    OR              reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    AND             reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    ID              reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    PRINT           reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    IF              reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    RETURN          reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    WHILE           reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    FOR             reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    BREAK           reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    PUSH            reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    COMA            reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)
    CORDER          reduce using rule 121 (expNativas -> SIN PARIZQ expresion PARDER .)


state 264

    (122) expNativas -> COS PARIZQ expresion PARDER .

    MAS             reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    MENOS           reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    MULT            reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    DIV             reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    MOD             reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    POT             reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    MENOR           reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    OR              reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    AND             reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    ID              reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    PRINT           reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    IF              reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    RETURN          reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    WHILE           reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    FOR             reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    BREAK           reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    PUSH            reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    PARDER          reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    COMA            reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)
    CORDER          reduce using rule 122 (expNativas -> COS PARIZQ expresion PARDER .)


state 265

    (123) expNativas -> TAN PARIZQ expresion PARDER .

    MAS             reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    MULT            reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    DIV             reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    MOD             reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    POT             reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    MENOR           reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    OR              reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    AND             reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    ID              reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    PRINT           reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    IF              reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    RETURN          reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    WHILE           reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    FOR             reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    BREAK           reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    PUSH            reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    COMA            reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)
    CORDER          reduce using rule 123 (expNativas -> TAN PARIZQ expresion PARDER .)


state 266

    (124) expNativas -> SQRT PARIZQ expresion PARDER .

    MAS             reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    MULT            reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    DIV             reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    MOD             reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    POT             reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    OR              reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    AND             reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    ID              reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    PRINT           reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    IF              reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    FOR             reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    PUSH            reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    COMA            reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 124 (expNativas -> SQRT PARIZQ expresion PARDER .)


state 267

    (125) expNativas -> UPPERCASE PARIZQ expresion PARDER .

    MAS             reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    MULT            reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    DIV             reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    MOD             reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    POT             reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    ID              reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    PRINT           reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    IF              reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    RETURN          reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    WHILE           reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    FOR             reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    BREAK           reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    PUSH            reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 125 (expNativas -> UPPERCASE PARIZQ expresion PARDER .)


state 268

    (126) expNativas -> LOWERCASE PARIZQ expresion PARDER .

    MAS             reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    MULT            reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    DIV             reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    MOD             reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    POT             reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    ID              reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    PRINT           reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    IF              reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    RETURN          reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    WHILE           reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    FOR             reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    BREAK           reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    PUSH            reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 126 (expNativas -> LOWERCASE PARIZQ expresion PARDER .)


state 269

    (127) expNativas -> PARSE PARIZQ INT64 COMA . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 306
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 270

    (128) expNativas -> PARSE PARIZQ FLOAT64 COMA . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 307
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 271

    (129) expNativas -> TRUNC PARIZQ expresion PARDER .

    MAS             reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    MENOS           reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    MULT            reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    DIV             reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    MOD             reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    POT             reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    MENOR           reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    OR              reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    AND             reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    ID              reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    PRINT           reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    IF              reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    RETURN          reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    WHILE           reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    FOR             reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    BREAK           reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    PUSH            reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    PARDER          reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    COMA            reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)
    CORDER          reduce using rule 129 (expNativas -> TRUNC PARIZQ expresion PARDER .)


state 272

    (130) expNativas -> FLOAT PARIZQ expresion PARDER .

    MAS             reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    MULT            reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    DIV             reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    MOD             reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    POT             reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    OR              reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    AND             reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    ID              reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    PRINT           reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    IF              reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    FOR             reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    PUSH            reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    COMA            reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 130 (expNativas -> FLOAT PARIZQ expresion PARDER .)


state 273

    (131) expNativas -> STRING PARIZQ expresion PARDER .

    MAS             reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    MENOS           reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    MULT            reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    DIV             reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    MOD             reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    POT             reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    MENOR           reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    OR              reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    AND             reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    ID              reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    PRINT           reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    IF              reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    RETURN          reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    WHILE           reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    FOR             reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    BREAK           reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    PUSH            reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    PARDER          reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    COMA            reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)
    CORDER          reduce using rule 131 (expNativas -> STRING PARIZQ expresion PARDER .)


state 274

    (132) expNativas -> TYPEOF PARIZQ expresion PARDER .

    MAS             reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    MENOS           reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    MULT            reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    DIV             reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    MOD             reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    POT             reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    MENOR           reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    IGUALES         reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    DISTINTOS       reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    OR              reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    AND             reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    ID              reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    PRINT           reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    IF              reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    RETURN          reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    WHILE           reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    FOR             reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    BREAK           reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    PUSH            reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    PARDER          reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    COMA            reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)
    CORDER          reduce using rule 132 (expNativas -> TYPEOF PARIZQ expresion PARDER .)


state 275

    (140) popArreglo -> POP NOT PARIZQ accesoArreglo . PARDER
    (137) accesoArreglo -> accesoArreglo . CORIZQ expresion CORDER

    PARDER          shift and go to state 308
    CORIZQ          shift and go to state 90


state 276

    (141) popArreglo -> POP NOT PARIZQ ID . PARDER
    (136) accesoArreglo -> ID . CORIZQ expresion CORDER

    PARDER          shift and go to state 309
    CORIZQ          shift and go to state 43


state 277

    (142) lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .

    MAS             reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    MENOS           reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    MULT            reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    DIV             reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    MOD             reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    POT             reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    MAYOR           reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    MENOR           reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    MAYORIGUAL      reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    MENORIGUAL      reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    IGUALES         reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    DISTINTOS       reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    OR              reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    AND             reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    ID              reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    PRINTLN         reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    PRINT           reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    IF              reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    RETURN          reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    WHILE           reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    FOR             reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    BREAK           reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    CONTINUE        reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    STRUCT          reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    MUTABLE         reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    PUSH            reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    LOCAL           reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    GLOBAL          reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    DOSPUNTOS       reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    PUNTOCOMA       reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    PARDER          reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    COMA            reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)
    CORDER          reduce using rule 142 (lenArreglo -> LENGTH PARIZQ accesoArreglo PARDER .)


state 278

    (143) lenArreglo -> LENGTH PARIZQ ID PARDER .

    MAS             reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    MENOS           reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    MULT            reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    DIV             reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    MOD             reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    POT             reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    MAYOR           reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    MENOR           reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    MAYORIGUAL      reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    MENORIGUAL      reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    IGUALES         reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    DISTINTOS       reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    OR              reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    AND             reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    ID              reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    PRINTLN         reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    PRINT           reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    IF              reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    RETURN          reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    WHILE           reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    FOR             reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    BREAK           reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    CONTINUE        reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    STRUCT          reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    MUTABLE         reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    PUSH            reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    LOCAL           reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    GLOBAL          reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    DOSPUNTOS       reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    PUNTOCOMA       reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    PARDER          reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    COMA            reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)
    CORDER          reduce using rule 143 (lenArreglo -> LENGTH PARIZQ ID PARDER .)


state 279

    (68) forINS -> FOR ID IN expresion DOSPUNTOS . expresion sentencia END
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 310
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 280

    (69) forINS -> FOR ID IN expresion sentencia . END

    END             shift and go to state 311


state 281

    (83) atributosStr -> ID DOSPUNTOS DOSPUNTOS . tipos PUNTOCOMA
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 312

state 282

    (80) atributosStr -> atributosStr ID PUNTOCOMA .

    END             reduce using rule 80 (atributosStr -> atributosStr ID PUNTOCOMA .)
    ID              reduce using rule 80 (atributosStr -> atributosStr ID PUNTOCOMA .)


state 283

    (82) atributosStr -> atributosStr ID DOSPUNTOS . DOSPUNTOS tipos PUNTOCOMA

    DOSPUNTOS       shift and go to state 313


state 284

    (79) newStruct -> MUTABLE STRUCT ID atributosStr END .

    PUNTOCOMA       reduce using rule 79 (newStruct -> MUTABLE STRUCT ID atributosStr END .)


state 285

    (144) pushArreglo -> PUSH NOT PARIZQ accesoArreglo COMA . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    accesoArreglo                  shift and go to state 63
    expresion                      shift and go to state 314
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 286

    (145) pushArreglo -> PUSH NOT PARIZQ ID COMA . expresion PARDER
    (84) expresion -> . MENOS expresion
    (85) expresion -> . NOT expresion
    (86) expresion -> . expresion MAS expresion
    (87) expresion -> . expresion MENOS expresion
    (88) expresion -> . expresion MULT expresion
    (89) expresion -> . expresion DIV expresion
    (90) expresion -> . expresion MOD expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MAYOR expresion
    (93) expresion -> . expresion MENOR expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion IGUALES expresion
    (97) expresion -> . expresion DISTINTOS expresion
    (98) expresion -> . expresion OR expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expValor
    (101) expValor -> . PARIZQ expresion PARDER
    (102) expValor -> . INTID
    (103) expValor -> . FLOATID
    (104) expValor -> . STRINGID
    (105) expValor -> . expCHAR
    (106) expValor -> . expNativas
    (107) expValor -> . TRUE
    (108) expValor -> . FALSE
    (109) expValor -> . ID
    (110) expValor -> . NOTHING
    (111) expValor -> . llamadaFunc
    (112) expValor -> . accesoStruct
    (113) expValor -> . defArreglo
    (114) expValor -> . accesoArreglo
    (115) expValor -> . cutArreglo
    (116) expValor -> . popArreglo
    (117) expValor -> . lenArreglo
    (118) expCHAR -> . CHARID
    (119) expNativas -> . LOG10 PARIZQ expresion PARDER
    (120) expNativas -> . LOG PARIZQ expresion COMA expresion PARDER
    (121) expNativas -> . SIN PARIZQ expresion PARDER
    (122) expNativas -> . COS PARIZQ expresion PARDER
    (123) expNativas -> . TAN PARIZQ expresion PARDER
    (124) expNativas -> . SQRT PARIZQ expresion PARDER
    (125) expNativas -> . UPPERCASE PARIZQ expresion PARDER
    (126) expNativas -> . LOWERCASE PARIZQ expresion PARDER
    (127) expNativas -> . PARSE PARIZQ INT64 COMA expresion PARDER
    (128) expNativas -> . PARSE PARIZQ FLOAT64 COMA expresion PARDER
    (129) expNativas -> . TRUNC PARIZQ expresion PARDER
    (130) expNativas -> . FLOAT PARIZQ expresion PARDER
    (131) expNativas -> . STRING PARIZQ expresion PARDER
    (132) expNativas -> . TYPEOF PARIZQ expresion PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (135) defArreglo -> . CORIZQ listParams CORDER
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER
    (138) cutArreglo -> . accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER
    (139) cutArreglo -> . ID CORIZQ expresion DOSPUNTOS expresion CORDER
    (140) popArreglo -> . POP NOT PARIZQ accesoArreglo PARDER
    (141) popArreglo -> . POP NOT PARIZQ ID PARDER
    (142) lenArreglo -> . LENGTH PARIZQ accesoArreglo PARDER
    (143) lenArreglo -> . LENGTH PARIZQ ID PARDER

    MENOS           shift and go to state 47
    NOT             shift and go to state 48
    PARIZQ          shift and go to state 50
    INTID           shift and go to state 51
    FLOATID         shift and go to state 52
    STRINGID        shift and go to state 53
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    NOTHING         shift and go to state 59
    CHARID          shift and go to state 67
    LOG10           shift and go to state 68
    LOG             shift and go to state 69
    SIN             shift and go to state 70
    COS             shift and go to state 71
    TAN             shift and go to state 72
    SQRT            shift and go to state 73
    UPPERCASE       shift and go to state 74
    LOWERCASE       shift and go to state 75
    PARSE           shift and go to state 76
    TRUNC           shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    TYPEOF          shift and go to state 80
    CORIZQ          shift and go to state 81
    POP             shift and go to state 82
    LENGTH          shift and go to state 83

    expresion                      shift and go to state 315
    expValor                       shift and go to state 49
    expCHAR                        shift and go to state 54
    expNativas                     shift and go to state 55
    llamadaFunc                    shift and go to state 60
    accesoStruct                   shift and go to state 61
    defArreglo                     shift and go to state 62
    accesoArreglo                  shift and go to state 63
    cutArreglo                     shift and go to state 64
    popArreglo                     shift and go to state 65
    lenArreglo                     shift and go to state 66

state 287

    (25) params -> ID DOSPUNTOS DOSPUNTOS . tipos
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 316

state 288

    (18) funcionINS -> FUNCTION ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS . tipos sentencia END
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 317

state 289

    (20) funcionINS -> FUNCTION ID PARIZQ PARDER sentencia END .

    PUNTOCOMA       reduce using rule 20 (funcionINS -> FUNCTION ID PARIZQ PARDER sentencia END .)


state 290

    (19) funcionINS -> FUNCTION ID PARIZQ params PARDER DOSPUNTOS . DOSPUNTOS tipos sentencia END

    DOSPUNTOS       shift and go to state 318


state 291

    (21) funcionINS -> FUNCTION ID PARIZQ params PARDER sentencia . END

    END             shift and go to state 319


state 292

    (22) params -> params COMA ID .
    (23) params -> params COMA ID . DOSPUNTOS DOSPUNTOS tipos

    PARDER          reduce using rule 22 (params -> params COMA ID .)
    COMA            reduce using rule 22 (params -> params COMA ID .)
    DOSPUNTOS       shift and go to state 320


state 293

    (17) declaracionglb -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos .

    PUNTOCOMA       reduce using rule 17 (declaracionglb -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos .)


state 294

    (58) tipos -> INT64 .

    PUNTOCOMA       reduce using rule 58 (tipos -> INT64 .)
    PARDER          reduce using rule 58 (tipos -> INT64 .)
    COMA            reduce using rule 58 (tipos -> INT64 .)
    ID              reduce using rule 58 (tipos -> INT64 .)
    PRINTLN         reduce using rule 58 (tipos -> INT64 .)
    PRINT           reduce using rule 58 (tipos -> INT64 .)
    IF              reduce using rule 58 (tipos -> INT64 .)
    RETURN          reduce using rule 58 (tipos -> INT64 .)
    WHILE           reduce using rule 58 (tipos -> INT64 .)
    FOR             reduce using rule 58 (tipos -> INT64 .)
    BREAK           reduce using rule 58 (tipos -> INT64 .)
    CONTINUE        reduce using rule 58 (tipos -> INT64 .)
    STRUCT          reduce using rule 58 (tipos -> INT64 .)
    MUTABLE         reduce using rule 58 (tipos -> INT64 .)
    PUSH            reduce using rule 58 (tipos -> INT64 .)
    LOCAL           reduce using rule 58 (tipos -> INT64 .)
    GLOBAL          reduce using rule 58 (tipos -> INT64 .)


state 295

    (59) tipos -> FLOAT64 .

    PUNTOCOMA       reduce using rule 59 (tipos -> FLOAT64 .)
    PARDER          reduce using rule 59 (tipos -> FLOAT64 .)
    COMA            reduce using rule 59 (tipos -> FLOAT64 .)
    ID              reduce using rule 59 (tipos -> FLOAT64 .)
    PRINTLN         reduce using rule 59 (tipos -> FLOAT64 .)
    PRINT           reduce using rule 59 (tipos -> FLOAT64 .)
    IF              reduce using rule 59 (tipos -> FLOAT64 .)
    RETURN          reduce using rule 59 (tipos -> FLOAT64 .)
    WHILE           reduce using rule 59 (tipos -> FLOAT64 .)
    FOR             reduce using rule 59 (tipos -> FLOAT64 .)
    BREAK           reduce using rule 59 (tipos -> FLOAT64 .)
    CONTINUE        reduce using rule 59 (tipos -> FLOAT64 .)
    STRUCT          reduce using rule 59 (tipos -> FLOAT64 .)
    MUTABLE         reduce using rule 59 (tipos -> FLOAT64 .)
    PUSH            reduce using rule 59 (tipos -> FLOAT64 .)
    LOCAL           reduce using rule 59 (tipos -> FLOAT64 .)
    GLOBAL          reduce using rule 59 (tipos -> FLOAT64 .)


state 296

    (60) tipos -> STRING .

    PUNTOCOMA       reduce using rule 60 (tipos -> STRING .)
    PARDER          reduce using rule 60 (tipos -> STRING .)
    COMA            reduce using rule 60 (tipos -> STRING .)
    ID              reduce using rule 60 (tipos -> STRING .)
    PRINTLN         reduce using rule 60 (tipos -> STRING .)
    PRINT           reduce using rule 60 (tipos -> STRING .)
    IF              reduce using rule 60 (tipos -> STRING .)
    RETURN          reduce using rule 60 (tipos -> STRING .)
    WHILE           reduce using rule 60 (tipos -> STRING .)
    FOR             reduce using rule 60 (tipos -> STRING .)
    BREAK           reduce using rule 60 (tipos -> STRING .)
    CONTINUE        reduce using rule 60 (tipos -> STRING .)
    STRUCT          reduce using rule 60 (tipos -> STRING .)
    MUTABLE         reduce using rule 60 (tipos -> STRING .)
    PUSH            reduce using rule 60 (tipos -> STRING .)
    LOCAL           reduce using rule 60 (tipos -> STRING .)
    GLOBAL          reduce using rule 60 (tipos -> STRING .)


state 297

    (61) tipos -> BOOL .

    PUNTOCOMA       reduce using rule 61 (tipos -> BOOL .)
    PARDER          reduce using rule 61 (tipos -> BOOL .)
    COMA            reduce using rule 61 (tipos -> BOOL .)
    ID              reduce using rule 61 (tipos -> BOOL .)
    PRINTLN         reduce using rule 61 (tipos -> BOOL .)
    PRINT           reduce using rule 61 (tipos -> BOOL .)
    IF              reduce using rule 61 (tipos -> BOOL .)
    RETURN          reduce using rule 61 (tipos -> BOOL .)
    WHILE           reduce using rule 61 (tipos -> BOOL .)
    FOR             reduce using rule 61 (tipos -> BOOL .)
    BREAK           reduce using rule 61 (tipos -> BOOL .)
    CONTINUE        reduce using rule 61 (tipos -> BOOL .)
    STRUCT          reduce using rule 61 (tipos -> BOOL .)
    MUTABLE         reduce using rule 61 (tipos -> BOOL .)
    PUSH            reduce using rule 61 (tipos -> BOOL .)
    LOCAL           reduce using rule 61 (tipos -> BOOL .)
    GLOBAL          reduce using rule 61 (tipos -> BOOL .)


state 298

    (62) tipos -> CHAR .

    PUNTOCOMA       reduce using rule 62 (tipos -> CHAR .)
    PARDER          reduce using rule 62 (tipos -> CHAR .)
    COMA            reduce using rule 62 (tipos -> CHAR .)
    ID              reduce using rule 62 (tipos -> CHAR .)
    PRINTLN         reduce using rule 62 (tipos -> CHAR .)
    PRINT           reduce using rule 62 (tipos -> CHAR .)
    IF              reduce using rule 62 (tipos -> CHAR .)
    RETURN          reduce using rule 62 (tipos -> CHAR .)
    WHILE           reduce using rule 62 (tipos -> CHAR .)
    FOR             reduce using rule 62 (tipos -> CHAR .)
    BREAK           reduce using rule 62 (tipos -> CHAR .)
    CONTINUE        reduce using rule 62 (tipos -> CHAR .)
    STRUCT          reduce using rule 62 (tipos -> CHAR .)
    MUTABLE         reduce using rule 62 (tipos -> CHAR .)
    PUSH            reduce using rule 62 (tipos -> CHAR .)
    LOCAL           reduce using rule 62 (tipos -> CHAR .)
    GLOBAL          reduce using rule 62 (tipos -> CHAR .)


state 299

    (73) ifINS -> IF expresion sentencia ELSE sentencia END .

    PUNTOCOMA       reduce using rule 73 (ifINS -> IF expresion sentencia ELSE sentencia END .)


state 300

    (75) elseIfLista -> ELSEIF expresion sentencia .
    (76) elseIfLista -> ELSEIF expresion sentencia . ELSE sentencia
    (77) elseIfLista -> ELSEIF expresion sentencia . elseIfLista
    (75) elseIfLista -> . ELSEIF expresion sentencia
    (76) elseIfLista -> . ELSEIF expresion sentencia ELSE sentencia
    (77) elseIfLista -> . ELSEIF expresion sentencia elseIfLista

    END             reduce using rule 75 (elseIfLista -> ELSEIF expresion sentencia .)
    ELSE            shift and go to state 321
    ELSEIF          shift and go to state 184

    elseIfLista                    shift and go to state 322

state 301

    (54) declaracionINS -> ID IGUAL expresion DOSPUNTOS . DOSPUNTOS tipos

    DOSPUNTOS       shift and go to state 323


state 302

    (56) declaracionINS -> accesos ID IGUAL expresion .
    (57) declaracionINS -> accesos ID IGUAL expresion . DOSPUNTOS DOSPUNTOS tipos
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PUNTOCOMA       reduce using rule 56 (declaracionINS -> accesos ID IGUAL expresion .)
    DOSPUNTOS       shift and go to state 324
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 303

    (139) cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion . CORDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    CORDER          shift and go to state 325
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 304

    (138) cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion . CORDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    CORDER          shift and go to state 326
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 305

    (120) expNativas -> LOG PARIZQ expresion COMA expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 327
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 306

    (127) expNativas -> PARSE PARIZQ INT64 COMA expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 328
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 307

    (128) expNativas -> PARSE PARIZQ FLOAT64 COMA expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 329
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 308

    (140) popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .

    MAS             reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    MENOS           reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    MULT            reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    DIV             reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    MOD             reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    POT             reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    MAYOR           reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    MENOR           reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    MAYORIGUAL      reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    MENORIGUAL      reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    IGUALES         reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    DISTINTOS       reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    OR              reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    AND             reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    ID              reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    PRINTLN         reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    PRINT           reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    IF              reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    RETURN          reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    WHILE           reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    FOR             reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    BREAK           reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    CONTINUE        reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    STRUCT          reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    MUTABLE         reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    PUSH            reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    LOCAL           reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    GLOBAL          reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    DOSPUNTOS       reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    PUNTOCOMA       reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    PARDER          reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    COMA            reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)
    CORDER          reduce using rule 140 (popArreglo -> POP NOT PARIZQ accesoArreglo PARDER .)


state 309

    (141) popArreglo -> POP NOT PARIZQ ID PARDER .

    MAS             reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    MENOS           reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    MULT            reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    DIV             reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    MOD             reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    POT             reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    MAYOR           reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    MENOR           reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    MAYORIGUAL      reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    MENORIGUAL      reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    IGUALES         reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    DISTINTOS       reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    OR              reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    AND             reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    ID              reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    PRINTLN         reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    PRINT           reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    IF              reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    RETURN          reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    WHILE           reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    FOR             reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    BREAK           reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    CONTINUE        reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    STRUCT          reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    MUTABLE         reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    PUSH            reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    LOCAL           reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    GLOBAL          reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    DOSPUNTOS       reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    PUNTOCOMA       reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    PARDER          reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    COMA            reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)
    CORDER          reduce using rule 141 (popArreglo -> POP NOT PARIZQ ID PARDER .)


state 310

    (68) forINS -> FOR ID IN expresion DOSPUNTOS expresion . sentencia END
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118
    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 330
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 311

    (69) forINS -> FOR ID IN expresion sentencia END .

    PUNTOCOMA       reduce using rule 69 (forINS -> FOR ID IN expresion sentencia END .)


state 312

    (83) atributosStr -> ID DOSPUNTOS DOSPUNTOS tipos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 331


state 313

    (82) atributosStr -> atributosStr ID DOSPUNTOS DOSPUNTOS . tipos PUNTOCOMA
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 332

state 314

    (144) pushArreglo -> PUSH NOT PARIZQ accesoArreglo COMA expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 333
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 315

    (145) pushArreglo -> PUSH NOT PARIZQ ID COMA expresion . PARDER
    (86) expresion -> expresion . MAS expresion
    (87) expresion -> expresion . MENOS expresion
    (88) expresion -> expresion . MULT expresion
    (89) expresion -> expresion . DIV expresion
    (90) expresion -> expresion . MOD expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MAYOR expresion
    (93) expresion -> expresion . MENOR expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . IGUALES expresion
    (97) expresion -> expresion . DISTINTOS expresion
    (98) expresion -> expresion . OR expresion
    (99) expresion -> expresion . AND expresion

    PARDER          shift and go to state 334
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    MOD             shift and go to state 109
    POT             shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALES         shift and go to state 115
    DISTINTOS       shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 316

    (25) params -> ID DOSPUNTOS DOSPUNTOS tipos .

    PARDER          reduce using rule 25 (params -> ID DOSPUNTOS DOSPUNTOS tipos .)
    COMA            reduce using rule 25 (params -> ID DOSPUNTOS DOSPUNTOS tipos .)


state 317

    (18) funcionINS -> FUNCTION ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos . sentencia END
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 335
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 318

    (19) funcionINS -> FUNCTION ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS . tipos sentencia END
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 336

state 319

    (21) funcionINS -> FUNCTION ID PARIZQ params PARDER sentencia END .

    PUNTOCOMA       reduce using rule 21 (funcionINS -> FUNCTION ID PARIZQ params PARDER sentencia END .)


state 320

    (23) params -> params COMA ID DOSPUNTOS . DOSPUNTOS tipos

    DOSPUNTOS       shift and go to state 337


state 321

    (76) elseIfLista -> ELSEIF expresion sentencia ELSE . sentencia
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 338
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 322

    (77) elseIfLista -> ELSEIF expresion sentencia elseIfLista .

    END             reduce using rule 77 (elseIfLista -> ELSEIF expresion sentencia elseIfLista .)


state 323

    (54) declaracionINS -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS . tipos
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 339

state 324

    (57) declaracionINS -> accesos ID IGUAL expresion DOSPUNTOS . DOSPUNTOS tipos

    DOSPUNTOS       shift and go to state 340


state 325

    (139) cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .

    MAS             reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENOS           reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MULT            reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DIV             reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MOD             reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    POT             reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MAYOR           reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENOR           reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MAYORIGUAL      reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENORIGUAL      reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    IGUALES         reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DISTINTOS       reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    OR              reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    AND             reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    ID              reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PRINTLN         reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PRINT           reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    IF              reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    RETURN          reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    WHILE           reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    FOR             reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    BREAK           reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CONTINUE        reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    STRUCT          reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MUTABLE         reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PUSH            reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    LOCAL           reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    GLOBAL          reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DOSPUNTOS       reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PUNTOCOMA       reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PARDER          reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    COMA            reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CORDER          reduce using rule 139 (cutArreglo -> ID CORIZQ expresion DOSPUNTOS expresion CORDER .)


state 326

    (138) cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .

    MAS             reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENOS           reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MULT            reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DIV             reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MOD             reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    POT             reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MAYOR           reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENOR           reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MAYORIGUAL      reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENORIGUAL      reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    IGUALES         reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DISTINTOS       reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    OR              reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    AND             reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    ID              reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PRINTLN         reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PRINT           reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    IF              reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    RETURN          reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    WHILE           reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    FOR             reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    BREAK           reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CONTINUE        reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    STRUCT          reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MUTABLE         reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PUSH            reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    LOCAL           reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    GLOBAL          reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DOSPUNTOS       reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PUNTOCOMA       reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PARDER          reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    COMA            reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CORDER          reduce using rule 138 (cutArreglo -> accesoArreglo CORIZQ expresion DOSPUNTOS expresion CORDER .)


state 327

    (120) expNativas -> LOG PARIZQ expresion COMA expresion PARDER .

    MAS             reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    MULT            reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    DIV             reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    MOD             reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    POT             reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    IGUALES         reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    DISTINTOS       reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    ID              reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    PRINTLN         reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    PRINT           reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    IF              reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    RETURN          reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    WHILE           reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    FOR             reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    BREAK           reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    CONTINUE        reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    STRUCT          reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    MUTABLE         reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    PUSH            reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    LOCAL           reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    GLOBAL          reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    PUNTOCOMA       reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 120 (expNativas -> LOG PARIZQ expresion COMA expresion PARDER .)


state 328

    (127) expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .

    MAS             reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    MENOS           reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    MULT            reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    DIV             reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    MOD             reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    POT             reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    MAYOR           reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    MENOR           reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    IGUALES         reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    DISTINTOS       reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    OR              reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    AND             reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    ID              reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    PRINTLN         reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    PRINT           reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    IF              reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    RETURN          reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    WHILE           reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    FOR             reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    BREAK           reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    CONTINUE        reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    STRUCT          reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    MUTABLE         reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    PUSH            reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    LOCAL           reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    GLOBAL          reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    PUNTOCOMA       reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    PARDER          reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    COMA            reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)
    CORDER          reduce using rule 127 (expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER .)


state 329

    (128) expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .

    MAS             reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    MENOS           reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    MULT            reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    DIV             reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    MOD             reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    POT             reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    MAYOR           reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    MENOR           reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    IGUALES         reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    DISTINTOS       reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    OR              reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    AND             reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    ID              reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    PRINTLN         reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    PRINT           reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    IF              reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    RETURN          reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    WHILE           reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    FOR             reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    BREAK           reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    CONTINUE        reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    STRUCT          reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    MUTABLE         reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    PUSH            reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    LOCAL           reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    GLOBAL          reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    PUNTOCOMA       reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    PARDER          reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    COMA            reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)
    CORDER          reduce using rule 128 (expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER .)


state 330

    (68) forINS -> FOR ID IN expresion DOSPUNTOS expresion sentencia . END

    END             shift and go to state 341


state 331

    (83) atributosStr -> ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA .

    END             reduce using rule 83 (atributosStr -> ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA .)
    ID              reduce using rule 83 (atributosStr -> ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA .)


state 332

    (82) atributosStr -> atributosStr ID DOSPUNTOS DOSPUNTOS tipos . PUNTOCOMA

    PUNTOCOMA       shift and go to state 342


state 333

    (144) pushArreglo -> PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER .

    PUNTOCOMA       reduce using rule 144 (pushArreglo -> PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER .)


state 334

    (145) pushArreglo -> PUSH NOT PARIZQ ID COMA expresion PARDER .

    PUNTOCOMA       reduce using rule 145 (pushArreglo -> PUSH NOT PARIZQ ID COMA expresion PARDER .)


state 335

    (18) funcionINS -> FUNCTION ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos sentencia . END

    END             shift and go to state 343


state 336

    (19) funcionINS -> FUNCTION ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos . sentencia END
    (47) sentencia -> . instrucciones
    (32) instrucciones -> . instrucciones instruccion
    (33) instrucciones -> . instruccion
    (34) instruccion -> . declaracionINS PUNTOCOMA
    (35) instruccion -> . printINS PUNTOCOMA
    (36) instruccion -> . llamadaFunc PUNTOCOMA
    (37) instruccion -> . ifINS PUNTOCOMA
    (38) instruccion -> . returnINS PUNTOCOMA
    (39) instruccion -> . whileINS PUNTOCOMA
    (40) instruccion -> . forINS PUNTOCOMA
    (41) instruccion -> . breakINS PUNTOCOMA
    (42) instruccion -> . continueINS PUNTOCOMA
    (43) instruccion -> . newStruct PUNTOCOMA
    (44) instruccion -> . pushArreglo PUNTOCOMA
    (45) instruccion -> . asignacionStruct PUNTOCOMA
    (46) instruccion -> . asignacionArreglo PUNTOCOMA
    (52) declaracionINS -> . ID
    (53) declaracionINS -> . ID IGUAL expresion
    (54) declaracionINS -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (55) declaracionINS -> . accesos ID
    (56) declaracionINS -> . accesos ID IGUAL expresion
    (57) declaracionINS -> . accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos
    (48) printINS -> . PRINTLN PARIZQ listParams PARDER
    (49) printINS -> . PRINTLN PARIZQ PARDER
    (50) printINS -> . PRINT PARIZQ listParams PARDER
    (51) printINS -> . PRINT PARIZQ PARDER
    (26) llamadaFunc -> . ID PARIZQ PARDER
    (27) llamadaFunc -> . ID PARIZQ listParams PARDER
    (72) ifINS -> . IF expresion sentencia END
    (73) ifINS -> . IF expresion sentencia ELSE sentencia END
    (74) ifINS -> . IF expresion sentencia elseIfLista END
    (30) returnINS -> . RETURN
    (31) returnINS -> . RETURN expresion
    (67) whileINS -> . WHILE expresion sentencia END
    (68) forINS -> . FOR ID IN expresion DOSPUNTOS expresion sentencia END
    (69) forINS -> . FOR ID IN expresion sentencia END
    (70) breakINS -> . BREAK
    (71) continueINS -> . CONTINUE
    (78) newStruct -> . STRUCT ID atributosStr END
    (79) newStruct -> . MUTABLE STRUCT ID atributosStr END
    (144) pushArreglo -> . PUSH NOT PARIZQ accesoArreglo COMA expresion PARDER
    (145) pushArreglo -> . PUSH NOT PARIZQ ID COMA expresion PARDER
    (65) asignacionStruct -> . accesoStruct IGUAL expresion
    (66) asignacionArreglo -> . accesoArreglo IGUAL expresion
    (63) accesos -> . LOCAL
    (64) accesos -> . GLOBAL
    (133) accesoStruct -> . ID PUNTO ID
    (134) accesoStruct -> . accesoStruct PUNTO ID
    (136) accesoArreglo -> . ID CORIZQ expresion CORDER
    (137) accesoArreglo -> . accesoArreglo CORIZQ expresion CORDER

    ID              shift and go to state 134
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    IF              shift and go to state 19
    RETURN          shift and go to state 136
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    BREAK           shift and go to state 137
    CONTINUE        shift and go to state 138
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    PUSH            shift and go to state 24
    LOCAL           shift and go to state 139
    GLOBAL          shift and go to state 140

    sentencia                      shift and go to state 344
    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 120
    declaracionINS                 shift and go to state 121
    printINS                       shift and go to state 122
    llamadaFunc                    shift and go to state 123
    ifINS                          shift and go to state 124
    returnINS                      shift and go to state 125
    whileINS                       shift and go to state 126
    forINS                         shift and go to state 127
    breakINS                       shift and go to state 128
    continueINS                    shift and go to state 129
    newStruct                      shift and go to state 130
    pushArreglo                    shift and go to state 131
    asignacionStruct               shift and go to state 132
    asignacionArreglo              shift and go to state 133
    accesos                        shift and go to state 135
    accesoArreglo                  shift and go to state 25
    accesoStruct                   shift and go to state 26

state 337

    (23) params -> params COMA ID DOSPUNTOS DOSPUNTOS . tipos
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 345

state 338

    (76) elseIfLista -> ELSEIF expresion sentencia ELSE sentencia .

    END             reduce using rule 76 (elseIfLista -> ELSEIF expresion sentencia ELSE sentencia .)


state 339

    (54) declaracionINS -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos .

    PUNTOCOMA       reduce using rule 54 (declaracionINS -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos .)


state 340

    (57) declaracionINS -> accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS . tipos
    (58) tipos -> . INT64
    (59) tipos -> . FLOAT64
    (60) tipos -> . STRING
    (61) tipos -> . BOOL
    (62) tipos -> . CHAR

    INT64           shift and go to state 294
    FLOAT64         shift and go to state 295
    STRING          shift and go to state 296
    BOOL            shift and go to state 297
    CHAR            shift and go to state 298

    tipos                          shift and go to state 346

state 341

    (68) forINS -> FOR ID IN expresion DOSPUNTOS expresion sentencia END .

    PUNTOCOMA       reduce using rule 68 (forINS -> FOR ID IN expresion DOSPUNTOS expresion sentencia END .)


state 342

    (82) atributosStr -> atributosStr ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA .

    END             reduce using rule 82 (atributosStr -> atributosStr ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA .)
    ID              reduce using rule 82 (atributosStr -> atributosStr ID DOSPUNTOS DOSPUNTOS tipos PUNTOCOMA .)


state 343

    (18) funcionINS -> FUNCTION ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END .

    PUNTOCOMA       reduce using rule 18 (funcionINS -> FUNCTION ID PARIZQ PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END .)


state 344

    (19) funcionINS -> FUNCTION ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia . END

    END             shift and go to state 347


state 345

    (23) params -> params COMA ID DOSPUNTOS DOSPUNTOS tipos .

    PARDER          reduce using rule 23 (params -> params COMA ID DOSPUNTOS DOSPUNTOS tipos .)
    COMA            reduce using rule 23 (params -> params COMA ID DOSPUNTOS DOSPUNTOS tipos .)


state 346

    (57) declaracionINS -> accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos .

    PUNTOCOMA       reduce using rule 57 (declaracionINS -> accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos .)


state 347

    (19) funcionINS -> FUNCTION ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END .

    PUNTOCOMA       reduce using rule 19 (funcionINS -> FUNCTION ID PARIZQ params PARDER DOSPUNTOS DOSPUNTOS tipos sentencia END .)

